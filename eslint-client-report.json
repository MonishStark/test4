[{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\AppHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\CompletedMixCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\EnhancedSettingsPanel.tsx","messages":[{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":185,"column":15,"nodeType":"CallExpression","messageId":"missingRadix","endLine":185,"endColumn":30,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[4807,4807],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":237,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":237,"endColumn":17,"suggestions":[{"fix":{"range":[5932,5974],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":270,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":270,"endColumn":17,"suggestions":[{"fix":{"range":[6637,6679],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Enhanced Settings Panel with Job Queue Integration\r\n *\r\n * This component extends the original SettingsPanel to support background job processing\r\n * with real-time progress tracking and enhanced user experience.\r\n *\r\n * Key Enhancements:\r\n * - Asynchronous job submission with immediate feedback\r\n * - Priority selection for processing jobs\r\n * - Memory optimization toggle\r\n * - Real-time job progress integration\r\n * - Bulk processing capabilities\r\n * - Advanced processing options\r\n *\r\n * @format\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { ProcessingSettings } from \"@shared/schema\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n\tSelect,\r\n\tSelectContent,\r\n\tSelectItem,\r\n\tSelectTrigger,\r\n\tSelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n\tZap,\r\n\tSettings,\r\n\tClock,\r\n\tMemoryStick,\r\n\tLayers,\r\n\tAlertTriangle,\r\n} from \"lucide-react\";\r\n\r\n// Job priority options\r\nexport enum JobPriority {\r\n\tLOW = 1,\r\n\tNORMAL = 2,\r\n\tHIGH = 3,\r\n\tCRITICAL = 4,\r\n}\r\n\r\ninterface EnhancedSettingsPanelProps {\r\n\t/** ID of the track to process, null when no track available */\r\n\ttrackId: number | null;\r\n\t/** Callback fired when processing begins successfully */\r\n\tonProcessingStart: (jobId: string) => void;\r\n\t/** Whether the panel should be disabled (e.g., during processing) */\r\n\tdisabled?: boolean;\r\n\t/** Whether to show advanced options */\r\n\tshowAdvanced?: boolean;\r\n\t/** Current job ID if processing is active */\r\n\tactiveJobId?: string | null;\r\n}\r\n\r\nexport const EnhancedSettingsPanel: React.FC<EnhancedSettingsPanelProps> = ({\r\n\ttrackId,\r\n\tonProcessingStart,\r\n\tdisabled = false,\r\n\tshowAdvanced = true,\r\n\tactiveJobId = null,\r\n}) => {\r\n\tconst { toast } = useToast();\r\n\r\n\t// Core processing settings\r\n\tconst [settings, setSettings] = useState<ProcessingSettings>({\r\n\t\tintroLength: 16,\r\n\t\toutroLength: 16,\r\n\t\tpreserveVocals: true,\r\n\t\tbeatDetection: \"auto\",\r\n\t});\r\n\r\n\t// Enhanced options\r\n\tconst [priority, setPriority] = useState<JobPriority>(JobPriority.NORMAL);\r\n\tconst [useOptimization, setUseOptimization] = useState(true);\r\n\tconst [estimatedTime, setEstimatedTime] = useState<string>(\"2-5 minutes\");\r\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n\t/**\r\n\t * Calculate estimated processing time based on settings\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tconst baseTime = 3; // Base processing time in minutes\r\n\r\n\t\t// Factors that affect processing time\r\n\t\tconst complexityFactor = settings.preserveVocals ? 1.3 : 1.0;\r\n\t\tconst beatDetectionFactor = settings.beatDetection === \"madmom\" ? 1.2 : 1.0;\r\n\t\tconst lengthFactor = (settings.introLength + settings.outroLength) / 32;\r\n\t\tconst optimizationFactor = useOptimization ? 0.7 : 1.0;\r\n\t\tconst priorityFactor =\r\n\t\t\tpriority === JobPriority.HIGH\r\n\t\t\t\t? 0.8\r\n\t\t\t\t: priority === JobPriority.LOW\r\n\t\t\t\t? 1.4\r\n\t\t\t\t: 1.0;\r\n\r\n\t\tconst estimatedMinutes = Math.ceil(\r\n\t\t\tbaseTime *\r\n\t\t\t\tcomplexityFactor *\r\n\t\t\t\tbeatDetectionFactor *\r\n\t\t\t\tlengthFactor *\r\n\t\t\t\toptimizationFactor *\r\n\t\t\t\tpriorityFactor\r\n\t\t);\r\n\r\n\t\tsetEstimatedTime(\r\n\t\t\t`${Math.max(1, estimatedMinutes - 1)}-${estimatedMinutes + 2} minutes`\r\n\t\t);\r\n\t}, [settings, useOptimization, priority]);\r\n\r\n\t/**\r\n\t * Handle intro length adjustment\r\n\t */\r\n\tconst incrementIntroLength = () => {\r\n\t\tif (settings.introLength < 64) {\r\n\t\t\tsetSettings((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\tintroLength: prev.introLength + 8,\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tconst decrementIntroLength = () => {\r\n\t\tif (settings.introLength > 8) {\r\n\t\t\tsetSettings((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\tintroLength: prev.introLength - 8,\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Handle outro length adjustment\r\n\t */\r\n\tconst incrementOutroLength = () => {\r\n\t\tif (settings.outroLength < 64) {\r\n\t\t\tsetSettings((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\toutroLength: prev.outroLength + 8,\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tconst decrementOutroLength = () => {\r\n\t\tif (settings.outroLength > 8) {\r\n\t\t\tsetSettings((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\toutroLength: prev.outroLength - 8,\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Toggle vocal preservation\r\n\t */\r\n\tconst togglePreserveVocals = () => {\r\n\t\tsetSettings((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tpreserveVocals: !prev.preserveVocals,\r\n\t\t}));\r\n\t};\r\n\r\n\t/**\r\n\t * Handle beat detection algorithm change\r\n\t */\r\n\tconst handleBeatDetectionChange = (value: string) => {\r\n\t\tsetSettings((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tbeatDetection: value as \"auto\" | \"librosa\" | \"madmom\",\r\n\t\t}));\r\n\t};\r\n\r\n\t/**\r\n\t * Handle priority change\r\n\t */\r\n\tconst handlePriorityChange = (value: string) => {\r\n\t\tsetPriority(parseInt(value) as JobPriority);\r\n\t};\r\n\r\n\t/**\r\n\t * Submit processing job to queue\r\n\t */\r\n\tconst handleGenerateClick = async () => {\r\n\t\tif (!trackId) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"No track selected\",\r\n\t\t\t\tdescription: \"Please upload a track first.\",\r\n\t\t\t\tvariant: \"destructive\",\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsSubmitting(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`/api/tracks/${trackId}/process-async`, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t...settings,\r\n\t\t\t\t\tpriority,\r\n\t\t\t\t\tuseOptimization,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tconst errorData = await response.json();\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\terrorData.message || `Failed to start processing: ${response.status}`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst result = await response.json();\r\n\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Processing Queued\",\r\n\t\t\t\tdescription: `Your track is now queued for processing. Job ID: ${result.jobId.substring(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t8\r\n\t\t\t\t)}...`,\r\n\t\t\t\tduration: 5000,\r\n\t\t\t});\r\n\r\n\t\t\t// Notify parent component with job ID\r\n\t\t\tonProcessingStart(result.jobId);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Processing error:\", error);\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Processing Failed\",\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t(error as Error).message || \"An unexpected error occurred.\",\r\n\t\t\t\tvariant: \"destructive\",\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tsetIsSubmitting(false);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Cancel active job\r\n\t */\r\n\tconst handleCancelJob = async () => {\r\n\t\tif (!activeJobId) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`/api/jobs/${activeJobId}`, {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(\"Failed to cancel job\");\r\n\t\t\t}\r\n\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Job Cancelled\",\r\n\t\t\t\tdescription: \"Processing job has been cancelled.\",\r\n\t\t\t\tduration: 3000,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Cancel job error:\", error);\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Cancel Failed\",\r\n\t\t\t\tdescription: \"Failed to cancel the processing job.\",\r\n\t\t\t\tvariant: \"destructive\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Get priority badge variant and text\r\n\t */\r\n\tconst getPriorityDisplay = (priorityValue: JobPriority) => {\r\n\t\tconst priorities = {\r\n\t\t\t[JobPriority.LOW]: {\r\n\t\t\t\ttext: \"Low\",\r\n\t\t\t\tvariant: \"secondary\" as const,\r\n\t\t\t\ticon: Clock,\r\n\t\t\t},\r\n\t\t\t[JobPriority.NORMAL]: {\r\n\t\t\t\ttext: \"Normal\",\r\n\t\t\t\tvariant: \"outline\" as const,\r\n\t\t\t\ticon: Settings,\r\n\t\t\t},\r\n\t\t\t[JobPriority.HIGH]: {\r\n\t\t\t\ttext: \"High\",\r\n\t\t\t\tvariant: \"default\" as const,\r\n\t\t\t\ticon: Zap,\r\n\t\t\t},\r\n\t\t\t[JobPriority.CRITICAL]: {\r\n\t\t\t\ttext: \"Critical\",\r\n\t\t\t\tvariant: \"destructive\" as const,\r\n\t\t\t\ticon: AlertTriangle,\r\n\t\t\t},\r\n\t\t};\r\n\t\treturn priorities[priorityValue];\r\n\t};\r\n\r\n\tconst currentPriority = getPriorityDisplay(priority);\r\n\tconst PriorityIcon = currentPriority.icon;\r\n\r\n\treturn (\r\n\t\t<Card className='w-full'>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardTitle className='flex items-center justify-between'>\r\n\t\t\t\t\t<span>Audio Processing Settings</span>\r\n\t\t\t\t\t{activeJobId && (\r\n\t\t\t\t\t\t<Badge variant='default' className='flex items-center gap-1'>\r\n\t\t\t\t\t\t\t<Zap size={12} />\r\n\t\t\t\t\t\t\tProcessing Active\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CardTitle>\r\n\t\t\t</CardHeader>\r\n\r\n\t\t\t<CardContent className='space-y-6'>\r\n\t\t\t\t{/* Core Settings */}\r\n\t\t\t\t<div className='space-y-4'>\r\n\t\t\t\t\t<h3 className='text-lg font-semibold'>Extension Parameters</h3>\r\n\r\n\t\t\t\t\t{/* Intro Length */}\r\n\t\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t\t<Label className='font-medium'>\r\n\t\t\t\t\t\t\tIntro Length: {settings.introLength} bars\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t<div className='flex items-center gap-2'>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\tonClick={decrementIntroLength}\r\n\t\t\t\t\t\t\t\tdisabled={disabled || settings.introLength <= 8}>\r\n\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Badge variant='secondary'>{settings.introLength} bars</Badge>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\tonClick={incrementIntroLength}\r\n\t\t\t\t\t\t\t\tdisabled={disabled || settings.introLength >= 64}>\r\n\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Outro Length */}\r\n\t\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t\t<Label className='font-medium'>\r\n\t\t\t\t\t\t\tOutro Length: {settings.outroLength} bars\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t<div className='flex items-center gap-2'>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\tonClick={decrementOutroLength}\r\n\t\t\t\t\t\t\t\tdisabled={disabled || settings.outroLength <= 8}>\r\n\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Badge variant='secondary'>{settings.outroLength} bars</Badge>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\tonClick={incrementOutroLength}\r\n\t\t\t\t\t\t\t\tdisabled={disabled || settings.outroLength >= 64}>\r\n\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Preserve Vocals */}\r\n\t\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t\t<Label className='font-medium'>Preserve Vocals</Label>\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tchecked={settings.preserveVocals}\r\n\t\t\t\t\t\t\tonCheckedChange={togglePreserveVocals}\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Beat Detection */}\r\n\t\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t\t<Label className='font-medium'>Beat Detection Algorithm</Label>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvalue={settings.beatDetection}\r\n\t\t\t\t\t\t\tonValueChange={handleBeatDetectionChange}\r\n\t\t\t\t\t\t\tdisabled={disabled}>\r\n\t\t\t\t\t\t\t<SelectTrigger className='w-32'>\r\n\t\t\t\t\t\t\t\t<SelectValue />\r\n\t\t\t\t\t\t\t</SelectTrigger>\r\n\t\t\t\t\t\t\t<SelectContent>\r\n\t\t\t\t\t\t\t\t<SelectItem value='auto'>Auto</SelectItem>\r\n\t\t\t\t\t\t\t\t<SelectItem value='librosa'>Librosa</SelectItem>\r\n\t\t\t\t\t\t\t\t<SelectItem value='madmom'>Madmom</SelectItem>\r\n\t\t\t\t\t\t\t</SelectContent>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Advanced Settings */}\r\n\t\t\t\t{showAdvanced && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Separator />\r\n\t\t\t\t\t\t<div className='space-y-4'>\r\n\t\t\t\t\t\t\t<h3 className='text-lg font-semibold flex items-center gap-2'>\r\n\t\t\t\t\t\t\t\t<Settings size={18} />\r\n\t\t\t\t\t\t\t\tAdvanced Options\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t{/* Processing Priority */}\r\n\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t\t\t\t<Label className='font-medium'>Processing Priority</Label>\r\n\t\t\t\t\t\t\t\t<div className='flex items-center gap-2'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tvalue={priority.toString()}\r\n\t\t\t\t\t\t\t\t\t\tonValueChange={handlePriorityChange}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={disabled}>\r\n\t\t\t\t\t\t\t\t\t\t<SelectTrigger className='w-32'>\r\n\t\t\t\t\t\t\t\t\t\t\t<SelectValue />\r\n\t\t\t\t\t\t\t\t\t\t</SelectTrigger>\r\n\t\t\t\t\t\t\t\t\t\t<SelectContent>\r\n\t\t\t\t\t\t\t\t\t\t\t<SelectItem value={JobPriority.LOW.toString()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tLow\r\n\t\t\t\t\t\t\t\t\t\t\t</SelectItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<SelectItem value={JobPriority.NORMAL.toString()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tNormal\r\n\t\t\t\t\t\t\t\t\t\t\t</SelectItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<SelectItem value={JobPriority.HIGH.toString()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tHigh\r\n\t\t\t\t\t\t\t\t\t\t\t</SelectItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<SelectItem value={JobPriority.CRITICAL.toString()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCritical\r\n\t\t\t\t\t\t\t\t\t\t\t</SelectItem>\r\n\t\t\t\t\t\t\t\t\t\t</SelectContent>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\tvariant={currentPriority.variant}\r\n\t\t\t\t\t\t\t\t\t\tclassName='flex items-center gap-1'>\r\n\t\t\t\t\t\t\t\t\t\t<PriorityIcon size={12} />\r\n\t\t\t\t\t\t\t\t\t\t{currentPriority.text}\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Memory Optimization */}\r\n\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Label className='font-medium flex items-center gap-2'>\r\n\t\t\t\t\t\t\t\t\t\t<MemoryStick size={16} />\r\n\t\t\t\t\t\t\t\t\t\tMemory Optimization\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<p className='text-sm text-gray-500 mt-1'>\r\n\t\t\t\t\t\t\t\t\t\tUse optimized processing for reduced memory usage\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={useOptimization}\r\n\t\t\t\t\t\t\t\t\tonCheckedChange={setUseOptimization}\r\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Processing Info */}\r\n\t\t\t\t\t\t\t<div className='p-4 bg-blue-50 rounded-lg border border-blue-200'>\r\n\t\t\t\t\t\t\t\t<div className='flex items-center gap-2 mb-2'>\r\n\t\t\t\t\t\t\t\t\t<Clock size={16} className='text-blue-600' />\r\n\t\t\t\t\t\t\t\t\t<span className='font-medium text-blue-800'>\r\n\t\t\t\t\t\t\t\t\t\tEstimated Processing Time\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p className='text-blue-700'>{estimatedTime}</p>\r\n\r\n\t\t\t\t\t\t\t\t{useOptimization && (\r\n\t\t\t\t\t\t\t\t\t<div className='flex items-center gap-2 mt-2'>\r\n\t\t\t\t\t\t\t\t\t\t<MemoryStick size={14} className='text-green-600' />\r\n\t\t\t\t\t\t\t\t\t\t<span className='text-sm text-green-700'>\r\n\t\t\t\t\t\t\t\t\t\t\tMemory optimized (60-80% reduction)\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* Action Buttons */}\r\n\t\t\t\t<Separator />\r\n\t\t\t\t<div className='flex flex-col gap-3'>\r\n\t\t\t\t\t{!activeJobId ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleGenerateClick}\r\n\t\t\t\t\t\t\tdisabled={disabled || !trackId || isSubmitting}\r\n\t\t\t\t\t\t\tclassName='w-full flex items-center justify-center gap-2'\r\n\t\t\t\t\t\t\tsize='lg'>\r\n\t\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className='animate-spin rounded-full h-4 w-4 border-b-2 border-white' />\r\n\t\t\t\t\t\t\t\t\tQueueing...\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Layers size={16} />\r\n\t\t\t\t\t\t\t\t\tQueue Processing Job\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={handleCancelJob}\r\n\t\t\t\t\t\t\tvariant='destructive'\r\n\t\t\t\t\t\t\tclassName='w-full flex items-center justify-center gap-2'\r\n\t\t\t\t\t\t\tsize='lg'>\r\n\t\t\t\t\t\t\t<AlertTriangle size={16} />\r\n\t\t\t\t\t\t\tCancel Processing\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* Queue Benefits */}\r\n\t\t\t\t\t<div className='p-3 bg-green-50 rounded-lg border border-green-200'>\r\n\t\t\t\t\t\t<h4 className='font-medium text-green-800 mb-2'>\r\n\t\t\t\t\t\t\tBackground Processing Benefits:\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<ul className='text-sm text-green-700 space-y-1'>\r\n\t\t\t\t\t\t\t<li>• Non-blocking: Continue using the app while processing</li>\r\n\t\t\t\t\t\t\t<li>• Real-time progress updates via WebSocket</li>\r\n\t\t\t\t\t\t\t<li>• Automatic retry on temporary failures</li>\r\n\t\t\t\t\t\t\t<li>• Priority-based processing queue</li>\r\n\t\t\t\t\t\t\t{useOptimization && <li>• Memory-optimized for large files</li>}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default EnhancedSettingsPanel;\r\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\EnhancedUpload.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[670,673],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[670,673],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":45,"column":54,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":45,"endColumn":57,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1400,1403],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1400,1403],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Enhanced Upload Handler\r\n *\r\n * This component intelligently chooses between standard upload (≤15MB)\r\n * and streaming upload (>15MB) based on file size, providing the best\r\n * user experience for all file sizes.\r\n *\r\n * @format\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport UploadSection from \"./UploadSection\";\r\nimport StreamingUploadSection from \"./StreamingUploadSection\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\ninterface EnhancedUploadProps {\r\n\tonUploadSuccess: (track: any) => void;\r\n\tonUploadError?: (error: string) => void;\r\n}\r\n\r\nexport const EnhancedUpload: React.FC<EnhancedUploadProps> = ({\r\n\tonUploadSuccess,\r\n\tonUploadError,\r\n}) => {\r\n\tconst [activeTab, setActiveTab] = useState<\"standard\" | \"streaming\">(\r\n\t\t\"standard\"\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card className='w-full'>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardTitle className='flex items-center justify-between'>\r\n\t\t\t\t\t<span>Upload Audio Track</span>\r\n\t\t\t\t\t<div className='flex gap-2'>\r\n\t\t\t\t\t\t<Badge variant='secondary'>Standard: ≤15MB</Badge>\r\n\t\t\t\t\t\t<Badge variant='outline'>Streaming: ≤500MB</Badge>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CardTitle>\r\n\t\t\t</CardHeader>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={activeTab}\r\n\t\t\t\t\tonValueChange={(value) => setActiveTab(value as any)}>\r\n\t\t\t\t\t<TabsList className='grid w-full grid-cols-2'>\r\n\t\t\t\t\t\t<TabsTrigger value='standard'>\r\n\t\t\t\t\t\t\tStandard Upload\r\n\t\t\t\t\t\t\t<Badge variant='secondary' className='ml-2'>\r\n\t\t\t\t\t\t\t\t≤15MB\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</TabsTrigger>\r\n\t\t\t\t\t\t<TabsTrigger value='streaming'>\r\n\t\t\t\t\t\t\tLarge File Upload\r\n\t\t\t\t\t\t\t<Badge variant='outline' className='ml-2'>\r\n\t\t\t\t\t\t\t\t≤500MB\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</TabsTrigger>\r\n\t\t\t\t\t</TabsList>\r\n\r\n\t\t\t\t\t<TabsContent value='standard' className='mt-6'>\r\n\t\t\t\t\t\t<UploadSection onUploadSuccess={onUploadSuccess} />\r\n\t\t\t\t\t\t<div className='mt-4 p-3 bg-gray-50 rounded-lg text-sm text-gray-600'>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Standard Upload:</strong> Fast upload for files up to\r\n\t\t\t\t\t\t\t\t15MB. Recommended for most audio files.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TabsContent>\r\n\r\n\t\t\t\t\t<TabsContent value='streaming' className='mt-6'>\r\n\t\t\t\t\t\t<StreamingUploadSection\r\n\t\t\t\t\t\t\tonUploadSuccess={onUploadSuccess}\r\n\t\t\t\t\t\t\tonUploadError={onUploadError}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='mt-4 p-3 bg-blue-50 rounded-lg text-sm text-blue-700'>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Streaming Upload:</strong> Memory-efficient upload for\r\n\t\t\t\t\t\t\t\tlarge files up to 500MB with real-time progress tracking.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TabsContent>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default EnhancedUpload;\r\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\JobQueueDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\JobQueueMonitor.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":62,"column":9,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":62,"endColumn":12,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1570,1573],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1570,1573],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":76,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":76,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1812,1815],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1812,1815],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":77,"column":15,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":77,"endColumn":18,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1832,1835],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1832,1835],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":78,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":78,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1854,1857],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1854,1857],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":16,"suggestions":[{"fix":{"range":[3356,3401],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":141,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":141,"endColumn":16,"suggestions":[{"fix":{"range":[3641,3700],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":151,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":151,"endColumn":18,"suggestions":[{"fix":{"range":[3925,3977],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":159,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":159,"endColumn":16,"suggestions":[{"fix":{"range":[4165,4223],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":206,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":206,"endColumn":18,"suggestions":[{"fix":{"range":[5283,5321],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":226,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":226,"endColumn":17,"suggestions":[{"fix":{"range":[5780,5836],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":323,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":323,"endColumn":18,"suggestions":[{"fix":{"range":[8294,8340],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Job Queue Monitor Component\r\n *\r\n * A comprehensive real-time monitoring interface for background audio processing jobs.\r\n * This component provides:\r\n *\r\n * Core Features:\r\n * - Real-time job progress tracking via WebSocket\r\n * - Visual progress indicators with stage-specific messages\r\n * - Job cancellation capabilities\r\n * - Queue statistics and health monitoring\r\n * - Automatic reconnection and error handling\r\n * - Memory usage tracking for optimized jobs\r\n *\r\n * State Management:\r\n * - WebSocket connection status\r\n * - Active job tracking\r\n * - Progress updates and notifications\r\n * - Error handling and retry logic\r\n *\r\n * @format\r\n */\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport {\r\n\tAlertCircle,\r\n\tCheckCircle,\r\n\tClock,\r\n\tZap,\r\n\tTrash2,\r\n\tPause,\r\n\tPlay,\r\n\tRotateCcw,\r\n} from \"lucide-react\";\r\n\r\n// Job status types\r\nexport interface JobStatus {\r\n\tjobId: string;\r\n\ttrackId: number;\r\n\tstatus:\r\n\t\t| \"waiting\"\r\n\t\t| \"active\"\r\n\t\t| \"completed\"\r\n\t\t| \"failed\"\r\n\t\t| \"progress\"\r\n\t\t| \"stalled\";\r\n\tprogress?: {\r\n\t\tpercentage: number;\r\n\t\tstage: string;\r\n\t\tmessage: string;\r\n\t\tcurrentStep: number;\r\n\t\ttotalSteps: number;\r\n\t\testimatedTimeRemaining?: number;\r\n\t\tmemoryUsage?: number;\r\n\t};\r\n\tdata?: any;\r\n\ttimestamp: string;\r\n}\r\n\r\nexport interface QueueStats {\r\n\taudioProcessing: {\r\n\t\twaiting: number;\r\n\t\tactive: number;\r\n\t\tcompleted: number;\r\n\t\tfailed: number;\r\n\t\tdelayed: number;\r\n\t\tpaused: number;\r\n\t\ttotal: number;\r\n\t};\r\n\taudioAnalysis: any;\r\n\tfileCleanup: any;\r\n\tnotifications: any;\r\n\ttimestamp: string;\r\n}\r\n\r\ninterface JobQueueMonitorProps {\r\n\t/** ID of the user for filtering relevant jobs */\r\n\tuserId: number;\r\n\t/** Whether to show admin controls */\r\n\tisAdmin?: boolean;\r\n\t/** Called when a job completes successfully */\r\n\tonJobComplete?: (jobId: string, trackId: number) => void;\r\n\t/** Called when a job fails */\r\n\tonJobFailed?: (jobId: string, trackId: number, error: string) => void;\r\n}\r\n\r\nexport const JobQueueMonitor: React.FC<JobQueueMonitorProps> = ({\r\n\tuserId,\r\n\tisAdmin = false,\r\n\tonJobComplete,\r\n\tonJobFailed,\r\n}) => {\r\n\tconst { toast } = useToast();\r\n\tconst socketRef = useRef<Socket | null>(null);\r\n\tconst reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t// Component state\r\n\tconst [isConnected, setIsConnected] = useState(false);\r\n\tconst [activeJobs, setActiveJobs] = useState<Map<string, JobStatus>>(\r\n\t\tnew Map()\r\n\t);\r\n\tconst [queueStats, setQueueStats] = useState<QueueStats | null>(null);\r\n\tconst [connectionError, setConnectionError] = useState<string | null>(null);\r\n\tconst [reconnectAttempts, setReconnectAttempts] = useState(0);\r\n\r\n\t/**\r\n\t * Initialize WebSocket connection\r\n\t */\r\n\tconst initializeWebSocket = useCallback(() => {\r\n\t\tif (socketRef.current?.connected) {\r\n\t\t\treturn; // Already connected\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst socket = io({\r\n\t\t\t\ttransports: [\"websocket\", \"polling\"],\r\n\t\t\t\ttimeout: 20000,\r\n\t\t\t\tforceNew: true,\r\n\t\t\t});\r\n\r\n\t\t\tsocketRef.current = socket;\r\n\r\n\t\t\t// Connection event handlers\r\n\t\t\tsocket.on(\"connect\", () => {\r\n\t\t\t\tconsole.log(\"Connected to job queue server\");\r\n\t\t\t\tsetIsConnected(true);\r\n\t\t\t\tsetConnectionError(null);\r\n\t\t\t\tsetReconnectAttempts(0);\r\n\r\n\t\t\t\t// Authenticate with the server\r\n\t\t\t\tsocket.emit(\"authenticate\", { userId, isAdmin });\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on(\"disconnect\", (reason) => {\r\n\t\t\t\tconsole.log(\"Disconnected from job queue server:\", reason);\r\n\t\t\t\tsetIsConnected(false);\r\n\r\n\t\t\t\tif (reason === \"io server disconnect\") {\r\n\t\t\t\t\t// Server initiated disconnect, try to reconnect\r\n\t\t\t\t\tscheduleReconnect();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on(\"connect_error\", (error) => {\r\n\t\t\t\tconsole.error(\"WebSocket connection error:\", error);\r\n\t\t\t\tsetConnectionError(error.message);\r\n\t\t\t\tsetIsConnected(false);\r\n\t\t\t\tscheduleReconnect();\r\n\t\t\t});\r\n\r\n\t\t\t// Authentication confirmation\r\n\t\t\tsocket.on(\"authenticated\", (data) => {\r\n\t\t\t\tconsole.log(\"Authenticated with job queue server:\", data);\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Connected\",\r\n\t\t\t\t\tdescription: \"Real-time job monitoring active\",\r\n\t\t\t\t\tduration: 3000,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Job update events\r\n\t\t\tsocket.on(\"job-update\", (jobUpdate: JobStatus) => {\r\n\t\t\t\thandleJobUpdate(jobUpdate);\r\n\t\t\t});\r\n\r\n\t\t\t// Queue statistics updates (admin only)\r\n\t\t\tif (isAdmin) {\r\n\t\t\t\tsocket.on(\"queue-stats\", (stats: QueueStats) => {\r\n\t\t\t\t\tsetQueueStats(stats);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocket.on(\"queues-paused\", () => {\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Queues Paused\",\r\n\t\t\t\t\t\tdescription: \"All job queues have been paused\",\r\n\t\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocket.on(\"queues-resumed\", () => {\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Queues Resumed\",\r\n\t\t\t\t\t\tdescription: \"All job queues have been resumed\",\r\n\t\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Notification events\r\n\t\t\tsocket.on(\"notification\", (notification) => {\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Job Notification\",\r\n\t\t\t\t\tdescription: notification.message,\r\n\t\t\t\t\tduration: 5000,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Error events\r\n\t\t\tsocket.on(\"error\", (error) => {\r\n\t\t\t\tconsole.error(\"Socket error:\", error);\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Job Queue Error\",\r\n\t\t\t\t\tdescription: error.message || \"An error occurred\",\r\n\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t\tduration: 5000,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Server shutdown notification\r\n\t\t\tsocket.on(\"server-shutdown\", (data) => {\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Server Maintenance\",\r\n\t\t\t\t\tdescription: data.message,\r\n\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t\tduration: 10000,\r\n\t\t\t\t});\r\n\t\t\t\tsetIsConnected(false);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Failed to initialize WebSocket:\", error);\r\n\t\t\tsetConnectionError(\r\n\t\t\t\terror instanceof Error ? error.message : \"Connection failed\"\r\n\t\t\t);\r\n\t\t\tscheduleReconnect();\r\n\t\t}\r\n\t}, [userId, isAdmin, toast]);\r\n\r\n\t/**\r\n\t * Schedule reconnection attempt\r\n\t */\r\n\tconst scheduleReconnect = useCallback(() => {\r\n\t\tif (reconnectTimeoutRef.current) {\r\n\t\t\tclearTimeout(reconnectTimeoutRef.current);\r\n\t\t}\r\n\r\n\t\tconst delay = Math.min(1000 * Math.pow(2, reconnectAttempts), 30000); // Exponential backoff, max 30s\r\n\r\n\t\treconnectTimeoutRef.current = setTimeout(() => {\r\n\t\t\tsetReconnectAttempts((prev) => prev + 1);\r\n\t\t\tinitializeWebSocket();\r\n\t\t}, delay);\r\n\t}, [reconnectAttempts, initializeWebSocket]);\r\n\r\n\t/**\r\n\t * Handle job status updates\r\n\t */\r\n\tconst handleJobUpdate = useCallback(\r\n\t\t(jobUpdate: JobStatus) => {\r\n\t\t\tconst { jobId, status, trackId } = jobUpdate;\r\n\r\n\t\t\tsetActiveJobs((prev) => {\r\n\t\t\t\tconst updated = new Map(prev);\r\n\r\n\t\t\t\tif (status === \"completed\") {\r\n\t\t\t\t\t// Remove completed job and notify parent\r\n\t\t\t\t\tupdated.delete(jobId);\r\n\t\t\t\t\tonJobComplete?.(jobId, trackId);\r\n\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Job Completed\",\r\n\t\t\t\t\t\tdescription: `Audio processing completed for track ${trackId}`,\r\n\t\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (status === \"failed\") {\r\n\t\t\t\t\t// Remove failed job and notify parent\r\n\t\t\t\t\tupdated.delete(jobId);\r\n\t\t\t\t\tconst error = jobUpdate.data?.error || \"Unknown error\";\r\n\t\t\t\t\tonJobFailed?.(jobId, trackId, error);\r\n\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Job Failed\",\r\n\t\t\t\t\t\tdescription: `Audio processing failed for track ${trackId}: ${error}`,\r\n\t\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t\t\tduration: 7000,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Update active job\r\n\t\t\t\t\tupdated.set(jobId, jobUpdate);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn updated;\r\n\t\t\t});\r\n\t\t},\r\n\t\t[onJobComplete, onJobFailed, toast]\r\n\t);\r\n\r\n\t/**\r\n\t * Cancel a specific job\r\n\t */\r\n\tconst cancelJob = useCallback(\r\n\t\tasync (jobId: string) => {\r\n\t\t\tif (!socketRef.current?.connected) {\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Connection Error\",\r\n\t\t\t\t\tdescription: \"Not connected to job queue server\",\r\n\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsocketRef.current.emit(\"cancel-job\", { jobId });\r\n\r\n\t\t\t\t// Optimistically remove from active jobs\r\n\t\t\t\tsetActiveJobs((prev) => {\r\n\t\t\t\t\tconst updated = new Map(prev);\r\n\t\t\t\t\tupdated.delete(jobId);\r\n\t\t\t\t\treturn updated;\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Job Cancelled\",\r\n\t\t\t\t\tdescription: \"Processing job has been cancelled\",\r\n\t\t\t\t\tduration: 3000,\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error cancelling job:\", error);\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Cancel Failed\",\r\n\t\t\t\t\tdescription: \"Failed to cancel job\",\r\n\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[toast]\r\n\t);\r\n\r\n\t/**\r\n\t * Request queue statistics (admin only)\r\n\t */\r\n\tconst requestQueueStats = useCallback(() => {\r\n\t\tif (socketRef.current?.connected && isAdmin) {\r\n\t\t\tsocketRef.current.emit(\"get-queue-stats\");\r\n\t\t}\r\n\t}, [isAdmin]);\r\n\r\n\t/**\r\n\t * Pause all queues (admin only)\r\n\t */\r\n\tconst pauseQueues = useCallback(() => {\r\n\t\tif (socketRef.current?.connected && isAdmin) {\r\n\t\t\tsocketRef.current.emit(\"pause-queues\");\r\n\t\t}\r\n\t}, [isAdmin]);\r\n\r\n\t/**\r\n\t * Resume all queues (admin only)\r\n\t */\r\n\tconst resumeQueues = useCallback(() => {\r\n\t\tif (socketRef.current?.connected && isAdmin) {\r\n\t\t\tsocketRef.current.emit(\"resume-queues\");\r\n\t\t}\r\n\t}, [isAdmin]);\r\n\r\n\t/**\r\n\t * Manual reconnection\r\n\t */\r\n\tconst reconnect = useCallback(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tsocketRef.current.disconnect();\r\n\t\t\tsocketRef.current = null;\r\n\t\t}\r\n\t\tsetReconnectAttempts(0);\r\n\t\tinitializeWebSocket();\r\n\t}, [initializeWebSocket]);\r\n\r\n\t// Initialize WebSocket on component mount\r\n\tuseEffect(() => {\r\n\t\tinitializeWebSocket();\r\n\r\n\t\treturn () => {\r\n\t\t\tif (reconnectTimeoutRef.current) {\r\n\t\t\t\tclearTimeout(reconnectTimeoutRef.current);\r\n\t\t\t}\r\n\t\t\tif (socketRef.current) {\r\n\t\t\t\tsocketRef.current.disconnect();\r\n\t\t\t}\r\n\t\t};\r\n\t}, [initializeWebSocket]);\r\n\r\n\t/**\r\n\t * Render job status badge\r\n\t */\r\n\tconst renderStatusBadge = (status: string) => {\r\n\t\tconst statusConfig = {\r\n\t\t\twaiting: { variant: \"secondary\" as const, icon: Clock, text: \"Waiting\" },\r\n\t\t\tactive: { variant: \"default\" as const, icon: Zap, text: \"Processing\" },\r\n\t\t\tcompleted: {\r\n\t\t\t\tvariant: \"success\" as const,\r\n\t\t\t\ticon: CheckCircle,\r\n\t\t\t\ttext: \"Completed\",\r\n\t\t\t},\r\n\t\t\tfailed: {\r\n\t\t\t\tvariant: \"destructive\" as const,\r\n\t\t\t\ticon: AlertCircle,\r\n\t\t\t\ttext: \"Failed\",\r\n\t\t\t},\r\n\t\t\tstalled: {\r\n\t\t\t\tvariant: \"warning\" as const,\r\n\t\t\t\ticon: AlertCircle,\r\n\t\t\t\ttext: \"Stalled\",\r\n\t\t\t},\r\n\t\t\tprogress: { variant: \"default\" as const, icon: Zap, text: \"In Progress\" },\r\n\t\t};\r\n\r\n\t\tconst config =\r\n\t\t\tstatusConfig[status as keyof typeof statusConfig] || statusConfig.waiting;\r\n\t\tconst Icon = config.icon;\r\n\r\n\t\treturn (\r\n\t\t\t<Badge variant={config.variant} className='flex items-center gap-1'>\r\n\t\t\t\t<Icon size={12} />\r\n\t\t\t\t{config.text}\r\n\t\t\t</Badge>\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t * Format memory usage\r\n\t */\r\n\tconst formatMemoryUsage = (bytes?: number) => {\r\n\t\tif (!bytes) return null;\r\n\r\n\t\tconst mb = bytes / (1024 * 1024);\r\n\t\tif (mb < 1024) {\r\n\t\t\treturn `${mb.toFixed(1)} MB`;\r\n\t\t} else {\r\n\t\t\treturn `${(mb / 1024).toFixed(2)} GB`;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Render individual job card\r\n\t */\r\n\tconst renderJobCard = (job: JobStatus) => {\r\n\t\tconst { jobId, trackId, status, progress } = job;\r\n\r\n\t\treturn (\r\n\t\t\t<Card key={jobId} className='mb-4'>\r\n\t\t\t\t<CardHeader className='pb-2'>\r\n\t\t\t\t\t<div className='flex justify-between items-center'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<CardTitle className='text-lg'>Track {trackId}</CardTitle>\r\n\t\t\t\t\t\t\t<p className='text-sm text-gray-500'>\r\n\t\t\t\t\t\t\t\tJob ID: {jobId.substring(0, 8)}...\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='flex items-center gap-2'>\r\n\t\t\t\t\t\t\t{renderStatusBadge(status)}\r\n\t\t\t\t\t\t\t{(status === \"waiting\" ||\r\n\t\t\t\t\t\t\t\tstatus === \"active\" ||\r\n\t\t\t\t\t\t\t\tstatus === \"progress\") && (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\tonClick={() => cancelJob(jobId)}\r\n\t\t\t\t\t\t\t\t\tclassName='flex items-center gap-1'>\r\n\t\t\t\t\t\t\t\t\t<Trash2 size={14} />\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CardHeader>\r\n\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t{progress && (\r\n\t\t\t\t\t\t<div className='space-y-3'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className='flex justify-between text-sm mb-1'>\r\n\t\t\t\t\t\t\t\t\t<span className='font-medium'>{progress.stage}</span>\r\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\r\n\t\t\t\t\t\t\t\t\t\t{Math.round(progress.percentage)}%\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Progress value={progress.percentage} className='h-2' />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<p className='text-sm text-gray-600'>{progress.message}</p>\r\n\r\n\t\t\t\t\t\t\t<div className='flex justify-between text-xs text-gray-500'>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\tStep {progress.currentStep} of {progress.totalSteps}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{progress.estimatedTimeRemaining && (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{Math.round(progress.estimatedTimeRemaining / 1000)}s\r\n\t\t\t\t\t\t\t\t\t\tremaining\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{progress.memoryUsage && (\r\n\t\t\t\t\t\t\t\t<div className='text-xs text-blue-600'>\r\n\t\t\t\t\t\t\t\t\tMemory: {formatMemoryUsage(progress.memoryUsage)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='space-y-6'>\r\n\t\t\t{/* Connection Status */}\r\n\t\t\t<Card>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardTitle className='flex items-center justify-between'>\r\n\t\t\t\t\t\t<span>Job Queue Monitor</span>\r\n\t\t\t\t\t\t<div className='flex items-center gap-2'>\r\n\t\t\t\t\t\t\t<Badge variant={isConnected ? \"success\" : \"destructive\"}>\r\n\t\t\t\t\t\t\t\t{isConnected ? \"Connected\" : \"Disconnected\"}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t{!isConnected && (\r\n\t\t\t\t\t\t\t\t<Button variant='outline' size='sm' onClick={reconnect}>\r\n\t\t\t\t\t\t\t\t\t<RotateCcw size={14} className='mr-1' />\r\n\t\t\t\t\t\t\t\t\tReconnect\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardTitle>\r\n\t\t\t\t</CardHeader>\r\n\r\n\t\t\t\t{connectionError && (\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<div className='p-3 bg-red-50 border border-red-200 rounded-md'>\r\n\t\t\t\t\t\t\t<p className='text-sm text-red-700'>\r\n\t\t\t\t\t\t\t\tConnection Error: {connectionError}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{reconnectAttempts > 0 && (\r\n\t\t\t\t\t\t\t\t<p className='text-xs text-red-600 mt-1'>\r\n\t\t\t\t\t\t\t\t\tReconnect attempts: {reconnectAttempts}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t)}\r\n\t\t\t</Card>\r\n\r\n\t\t\t{/* Active Jobs */}\r\n\t\t\t{activeJobs.size > 0 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className='text-lg font-semibold mb-4'>\r\n\t\t\t\t\t\tActive Jobs ({activeJobs.size})\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t{Array.from(activeJobs.values()).map(renderJobCard)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Admin Controls */}\r\n\t\t\t{isAdmin && isConnected && (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t<CardTitle>Admin Controls</CardTitle>\r\n\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<div className='flex gap-2 mb-4'>\r\n\t\t\t\t\t\t\t<Button variant='outline' onClick={pauseQueues}>\r\n\t\t\t\t\t\t\t\t<Pause size={14} className='mr-1' />\r\n\t\t\t\t\t\t\t\tPause Queues\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant='outline' onClick={resumeQueues}>\r\n\t\t\t\t\t\t\t\t<Play size={14} className='mr-1' />\r\n\t\t\t\t\t\t\t\tResume Queues\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant='outline' onClick={requestQueueStats}>\r\n\t\t\t\t\t\t\t\t<RotateCcw size={14} className='mr-1' />\r\n\t\t\t\t\t\t\t\tRefresh Stats\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{queueStats && (\r\n\t\t\t\t\t\t\t<div className='grid grid-cols-2 md:grid-cols-4 gap-4'>\r\n\t\t\t\t\t\t\t\t<div className='p-3 bg-blue-50 rounded-lg'>\r\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium text-blue-700'>\r\n\t\t\t\t\t\t\t\t\t\tAudio Processing\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold text-blue-900'>\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.audioProcessing.active} /{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.audioProcessing.total}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-xs text-blue-600'>Active / Total</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='p-3 bg-green-50 rounded-lg'>\r\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium text-green-700'>Analysis</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold text-green-900'>\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.audioAnalysis.active} /{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.audioAnalysis.total}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-xs text-green-600'>Active / Total</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='p-3 bg-yellow-50 rounded-lg'>\r\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium text-yellow-700'>Cleanup</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold text-yellow-900'>\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.fileCleanup.active} /{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.fileCleanup.total}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-xs text-yellow-600'>Active / Total</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='p-3 bg-purple-50 rounded-lg'>\r\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium text-purple-700'>\r\n\t\t\t\t\t\t\t\t\t\tNotifications\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold text-purple-900'>\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.notifications.active} /{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{queueStats.notifications.total}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className='text-xs text-purple-600'>Active / Total</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Empty State */}\r\n\t\t\t{activeJobs.size === 0 && isConnected && (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardContent className='text-center py-8'>\r\n\t\t\t\t\t\t<CheckCircle size={48} className='mx-auto text-gray-400 mb-4' />\r\n\t\t\t\t\t\t<h3 className='text-lg font-semibold text-gray-600 mb-2'>\r\n\t\t\t\t\t\t\tNo Active Jobs\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p className='text-sm text-gray-500'>\r\n\t\t\t\t\t\t\tAll audio processing jobs are completed. New jobs will appear here\r\n\t\t\t\t\t\t\tautomatically.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default JobQueueMonitor;\r\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ProcessingInfo.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'intervalId' is never reassigned. Use 'const' instead.","line":123,"column":7,"nodeType":"Identifier","messageId":"useConst","endLine":123,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'isRegeneration' is assigned a value but never used.","line":144,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":144,"endColumn":26},{"ruleId":"prefer-const","severity":2,"message":"'newSteps' is never reassigned. Use 'const' instead.","line":152,"column":10,"nodeType":"Identifier","messageId":"useConst","endLine":152,"endColumn":18,"fix":{"range":[5061,5103],"text":"const newSteps = [...processingState.steps];"}},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":221,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":221,"endColumn":18,"suggestions":[{"fix":{"range":[7169,7227],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\n/**\r\n * ProcessingInfo Component\r\n *\r\n * A sophisticated real-time processing status display that manages the entire audio processing workflow.\r\n * This component handles:\r\n *\r\n * Core Features:\r\n * - Real-time status polling from server every 2 seconds\r\n * - Step-by-step progress visualization with detailed status messages\r\n * - Processing simulation with estimated completion times\r\n * - Comprehensive error handling and timeout protection (5-minute limit)\r\n * - Automatic cleanup and callback execution on completion\r\n *\r\n * State Management:\r\n * - Tracks processing steps (initialization, audio analysis, extension generation)\r\n * - Manages polling intervals and timeouts\r\n * - Handles various processing states (pending, in-progress, completed, failed)\r\n *\r\n * The component provides transparent feedback to users during audio processing operations\r\n * which can take several minutes depending on track length and complexity.\r\n */\r\ninterface ProcessingInfoProps {\r\n\t/** The track ID being processed */\r\n\ttrackId: number;\r\n\t/** Callback fired when processing completes successfully */\r\n\tonComplete: () => void;\r\n\t/** Callback fired when user cancels processing or timeout occurs */\r\n\tonCancel: () => void;\r\n}\r\n\r\n/**\r\n * Internal state structure for tracking processing progress\r\n * Manages both overall progress and individual step completion\r\n */\r\ninterface ProcessingState {\r\n\t/** Overall progress percentage (0-100) */\r\n\tprogress: number;\r\n\t/** Current processing status message */\r\n\tstatus: string;\r\n\t/** Detailed breakdown of processing steps with individual progress */\r\n\tsteps: {\r\n\t\t/** Human-readable description of the processing step */\r\n\t\ttext: string;\r\n\t\t/** Current status of this individual step */\r\n\t\tstatus: \"completed\" | \"current\" | \"pending\";\r\n\t}[];\r\n}\r\n\r\nconst ProcessingInfo: React.FC<ProcessingInfoProps> = ({\r\n\ttrackId,\r\n\tonComplete,\r\n\tonCancel,\r\n}) => {\r\n\t// Track whether this is a regeneration (vs initial generation)\r\n\tconst [isRegeneration, setIsRegeneration] = useState(false);\r\n\r\n\t// Main processing state with progress tracking and step breakdown\r\n\tconst [processingState, setProcessingState] = useState<ProcessingState>({\r\n\t\tprogress: 0,\r\n\t\tstatus: \"Initializing...\",\r\n\t\t// Initialize processing steps with context-aware descriptions\r\n\t\t// Steps adapt based on whether this is initial generation or regeneration\r\n\t\tsteps: [\r\n\t\t\t{\r\n\t\t\t\ttext: isRegeneration\r\n\t\t\t\t\t? \"Re-analyzing audio structure\"\r\n\t\t\t\t\t: \"Analyzing audio file structure\",\r\n\t\t\t\tstatus: \"current\",\r\n\t\t\t},\r\n\t\t\t{ text: \"Detecting tempo and beats\", status: \"pending\" },\r\n\t\t\t{\r\n\t\t\t\ttext: isRegeneration\r\n\t\t\t\t\t? \"Re-separating audio components\"\r\n\t\t\t\t\t: \"Separating audio components\",\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: isRegeneration\r\n\t\t\t\t\t? \"Re-creating extended sections\"\r\n\t\t\t\t\t: \"Creating extended sections\",\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: isRegeneration\r\n\t\t\t\t\t? \"Finalizing new mix version\"\r\n\t\t\t\t\t: \"Finalizing extended mix\",\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\t/**\r\n\t * Check if this is a regeneration by examining existing track data\r\n\t * This affects the UI messaging and step descriptions shown to user\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tconst checkTrackStatus = async () => {\r\n\t\t\tconst response = await fetch(`/api/tracks/${trackId}`);\r\n\t\t\tconst track = await response.json();\r\n\t\t\tsetIsRegeneration(track.extendedPaths?.length > 0);\r\n\t\t};\r\n\t\tcheckTrackStatus();\r\n\t}, [trackId]);\r\n\r\n\tconst { toast } = useToast();\r\n\r\n\t/**\r\n\t * Main processing monitoring effect with sophisticated polling system\r\n\t *\r\n\t * This effect implements:\r\n\t * - Real-time status polling every 2 seconds\r\n\t * - Progress simulation based on polling cycles\r\n\t * - Step-by-step status updates with visual feedback\r\n\t * - Timeout protection (5 minutes max)\r\n\t * - Comprehensive error handling and cleanup\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tlet intervalId: number;\r\n\t\tlet checkCount = 0;\r\n\t\tconst maxChecks = 150; // Maximum 5 minutes of polling (150 * 2s = 5min)\r\n\r\n\t\t/**\r\n\t\t * Polls the server for current processing status and updates UI accordingly\r\n\t\t * Implements a state machine that transitions through processing phases\r\n\t\t */\r\n\t\tconst checkStatus = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(`/api/tracks/${trackId}/status`);\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(\"Failed to fetch processing status\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tcheckCount++;\r\n\r\n\t\t\t\t// Handle active processing states (processing or regenerate)\r\n\t\t\t\tif (data.status === \"processing\" || data.status === \"regenerate\") {\r\n\t\t\t\t\tconst isRegeneration = data.status === \"regenerate\";\r\n\r\n\t\t\t\t\t// Calculate simulated progress based on polling cycles\r\n\t\t\t\t\t// Target 80% progress through polling, reserve 20% for completion\r\n\t\t\t\t\tconst progressIncrement = 100 / (maxChecks * 0.8);\r\n\t\t\t\t\tconst newProgress = Math.min(80, checkCount * progressIncrement);\r\n\r\n\t\t\t\t\t// Update processing steps based on current progress\r\n\t\t\t\t\tlet newSteps = [...processingState.steps];\r\n\t\t\t\t\tlet stepStatus = \"Analyzing audio...\";\r\n\r\n\t\t\t\t\t// Progress-based step transitions\r\n\t\t\t\t\tif (newProgress < 20) {\r\n\t\t\t\t\t\tnewSteps[0].status = \"current\";\r\n\t\t\t\t\t\tstepStatus = \"Analyzing audio file structure...\";\r\n\t\t\t\t\t} else if (newProgress < 40) {\r\n\t\t\t\t\t\tnewSteps[0].status = \"completed\";\r\n\t\t\t\t\t\tnewSteps[1].status = \"current\";\r\n\t\t\t\t\t\tstepStatus = \"Detecting tempo and beats...\";\r\n\t\t\t\t\t} else if (newProgress < 60) {\r\n\t\t\t\t\t\tnewSteps[0].status = \"completed\";\r\n\t\t\t\t\t\tnewSteps[1].status = \"completed\";\r\n\t\t\t\t\t\tnewSteps[2].status = \"current\";\r\n\t\t\t\t\t\tstepStatus = \"Separating audio components...\";\r\n\t\t\t\t\t} else if (newProgress < 80) {\r\n\t\t\t\t\t\tnewSteps[0].status = \"completed\";\r\n\t\t\t\t\t\tnewSteps[1].status = \"completed\";\r\n\t\t\t\t\t\tnewSteps[2].status = \"completed\";\r\n\t\t\t\t\t\tnewSteps[3].status = \"current\";\r\n\t\t\t\t\t\tstepStatus = \"Creating extended sections...\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetProcessingState({\r\n\t\t\t\t\t\tprogress: newProgress,\r\n\t\t\t\t\t\tstatus: stepStatus,\r\n\t\t\t\t\t\tsteps: newSteps,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (data.status === \"completed\") {\r\n\t\t\t\t\tsetProcessingState((prev) => ({\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tprogress: 100,\r\n\t\t\t\t\t\tstatus: \"Complete\",\r\n\t\t\t\t\t\tsteps: prev.steps.map((step) => ({ ...step, status: \"completed\" })),\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tclearInterval(intervalId);\r\n\t\t\t\t\tonComplete();\r\n\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Processing Complete\",\r\n\t\t\t\t\t\tdescription: \"Your extended mix is ready!\",\r\n\t\t\t\t\t\tvariant: \"default\",\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (data.status === \"error\") {\r\n\t\t\t\t\t// Processing failed\r\n\t\t\t\t\tclearInterval(intervalId);\r\n\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Processing Failed\",\r\n\t\t\t\t\t\tdescription: \"There was an error processing your track.\",\r\n\t\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tonCancel();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Stop polling after max checks to prevent infinite polling\r\n\t\t\t\tif (checkCount >= maxChecks) {\r\n\t\t\t\t\tclearInterval(intervalId);\r\n\t\t\t\t\ttoast({\r\n\t\t\t\t\t\ttitle: \"Processing Timeout\",\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t\"Processing is taking longer than expected. Please try again.\",\r\n\t\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\tonCancel();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error checking processing status:\", error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Check status immediately and then every 3 seconds\r\n\t\tcheckStatus();\r\n\t\tintervalId = window.setInterval(checkStatus, 3000);\r\n\r\n\t\treturn () => {\r\n\t\t\tif (intervalId) {\r\n\t\t\t\tclearInterval(intervalId);\r\n\t\t\t}\r\n\t\t};\r\n\t}, [trackId, onComplete, onCancel, toast]);\r\n\r\n\tconst handleCancelProcessing = async () => {\r\n\t\t// In a real app, we would make an API call to cancel processing\r\n\t\t// Since our backend doesn't support cancellation yet, we'll just update the UI\r\n\t\tonCancel();\r\n\r\n\t\ttoast({\r\n\t\t\ttitle: \"Processing Cancelled\",\r\n\t\t\tdescription: \"The processing has been cancelled.\",\r\n\t\t\tvariant: \"default\",\r\n\t\t});\r\n\t};\r\n\r\n\t// Render step icon based on its status\r\n\tconst renderStepIcon = (status: string) => {\r\n\t\tswitch (status) {\r\n\t\t\tcase \"completed\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span className='material-icons text-success mr-2 text-sm'>\r\n\t\t\t\t\t\tcheck_circle\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\tcase \"current\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span className='material-icons text-primary mr-2 text-sm'>\r\n\t\t\t\t\t\tradio_button_checked\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span className='material-icons mr-2 text-sm text-gray-400'>\r\n\t\t\t\t\t\tradio_button_unchecked\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='bg-white rounded-xl shadow-md p-6'>\r\n\t\t\t<h2 className='text-xl font-semibold mb-4'>Processing Track</h2>\r\n\r\n\t\t\t<div className='space-y-4'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='flex justify-between text-sm mb-1'>\r\n\t\t\t\t\t\t<span className='font-medium'>{processingState.status}</span>\r\n\t\t\t\t\t\t<span className='text-primary'>\r\n\t\t\t\t\t\t\t{Math.round(processingState.progress)}%\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='player-progress h-2 bg-gray-200 rounded-full overflow-hidden'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='h-full bg-gradient-to-r from-primary to-purple-600 rounded-full'\r\n\t\t\t\t\t\t\tstyle={{ width: `${processingState.progress}%` }}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='border border-gray-200 rounded-md p-3 bg-gray-50'>\r\n\t\t\t\t\t<h4 className='font-medium text-sm mb-2'>Processing Steps:</h4>\r\n\t\t\t\t\t<ul className='space-y-2 text-sm'>\r\n\t\t\t\t\t\t{processingState.steps.map((step, index) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={`step-${step.text}-${index}`}\r\n\t\t\t\t\t\t\t\tclassName='flex items-center'>\r\n\t\t\t\t\t\t\t\t{renderStepIcon(step.status)}\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={step.status === \"pending\" ? \"text-gray-400\" : \"\"}>\r\n\t\t\t\t\t\t\t\t\t{step.text}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='text-xs text-gray-500'>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThis may take several minutes depending on file size and complexity\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName='mt-6 w-full border border-gray-300 text-gray-700 py-2 px-4 rounded-md font-medium shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500'\r\n\t\t\t\tonClick={handleCancelProcessing}>\r\n\t\t\t\tCancel Processing\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProcessingInfo;\r\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\SettingsPanel.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'apiRequest' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'incrementOutroLength' is assigned a value but never used.","line":90,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":90,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'decrementOutroLength' is assigned a value but never used.","line":103,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":103,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'togglePreserveVocals' is assigned a value but never used.","line":116,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":116,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'handleBeatDetectionChange' is assigned a value but never used.","line":127,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":127,"endColumn":33},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":186,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":186,"endColumn":17,"suggestions":[{"fix":{"range":[5577,5619],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @format */\n\nimport React, { useState } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { ProcessingSettings } from \"@shared/schema\";\n\n/**\n * SettingsPanel Component\n *\n * A comprehensive audio processing configuration interface that allows users to customize\n * how their tracks are extended and processed. This component features:\n *\n * Core Features:\n * - Interactive controls for intro/outro length adjustment (8-64 bar range)\n * - Synchronized intro/outro length management for consistent workflow\n * - Audio processing options (vocal preservation, beat detection methods)\n * - Real-time validation and user feedback through toast notifications\n * - Disabled state management during processing to prevent conflicts\n * - Intelligent error handling with descriptive user messages\n *\n * State Management:\n * - Processing settings with default values optimized for most tracks\n * - Submission state tracking to prevent duplicate requests\n * - Form validation ensuring settings are within acceptable ranges\n *\n * The component integrates seamlessly with the audio processing pipeline,\n * sending validated settings to the server and managing the processing lifecycle.\n */\ninterface SettingsPanelProps {\n\t/** ID of the track to process, null when no track available */\n\ttrackId: number | null;\n\t/** Callback fired when processing begins successfully */\n\tonProcessingStart: () => void;\n\t/** Whether the panel should be disabled (e.g., during processing) */\n\tdisabled?: boolean;\n}\n\nconst SettingsPanel: React.FC<SettingsPanelProps> = ({\n\ttrackId,\n\tonProcessingStart,\n\tdisabled = false,\n}) => {\n\t// Processing settings state with optimized defaults for most tracks\n\tconst [settings, setSettings] = useState<ProcessingSettings>({\n\t\tintroLength: 16, // 16-bar intro (typical for DJ mixing)\n\t\toutroLength: 16, // 16-bar outro (matches intro for seamless loops)\n\t\tpreserveVocals: true, // Keep vocals intact by default\n\t\tbeatDetection: \"auto\", // Automatic beat detection algorithm selection\n\t});\n\n\t// Submission state to prevent duplicate processing requests\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst { toast } = useToast();\n\n\t/**\n\t * Increment intro length in 8-bar increments (DJ-friendly)\n\t * Also updates outro length to maintain consistency for DJ mixing\n\t * Maximum limit of 64 bars to prevent excessively long intros\n\t */\n\tconst incrementIntroLength = () => {\n\t\tif (settings.introLength < 64) {\n\t\t\tsetSettings((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\tintroLength: prev.introLength + 8,\n\t\t\t\toutroLength: prev.outroLength + 8, // Keep intro/outro synchronized\n\t\t\t}));\n\t\t}\n\t};\n\n\t/**\n\t * Decrement intro length in 8-bar increments\n\t * Maintains synchronization with outro length\n\t * Minimum limit of 8 bars to ensure adequate mixing time\n\t */\n\tconst decrementIntroLength = () => {\n\t\tif (settings.introLength > 8) {\n\t\t\tsetSettings((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\tintroLength: prev.introLength - 8,\n\t\t\t\toutroLength: prev.outroLength - 8, // Keep intro/outro synchronized\n\t\t\t}));\n\t\t}\n\t};\n\n\t/**\n\t * Independent outro length increment (not synchronized with intro)\n\t * Allows for asymmetric intro/outro lengths when needed\n\t */\n\tconst incrementOutroLength = () => {\n\t\tif (settings.outroLength < 64) {\n\t\t\tsetSettings((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\toutroLength: prev.outroLength + 8,\n\t\t\t}));\n\t\t}\n\t};\n\n\t/**\n\t * Independent outro length decrement\n\t * Maintains minimum 8-bar outro for adequate mixing\n\t */\n\tconst decrementOutroLength = () => {\n\t\tif (settings.outroLength > 8) {\n\t\t\tsetSettings((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\toutroLength: prev.outroLength - 8,\n\t\t\t}));\n\t\t}\n\t};\n\n\t/**\n\t * Toggle vocal preservation setting\n\t * When enabled, maintains vocal clarity during extension process\n\t */\n\tconst togglePreserveVocals = () => {\n\t\tsetSettings((prev) => ({\n\t\t\t...prev,\n\t\t\tpreserveVocals: !prev.preserveVocals,\n\t\t}));\n\t};\n\n\t/**\n\t * Handle beat detection algorithm selection\n\t * Supports multiple algorithms for different music types\n\t */\n\tconst handleBeatDetectionChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>\n\t) => {\n\t\tsetSettings((prev) => ({\n\t\t\t...prev,\n\t\t\tbeatDetection: e.target.value as \"auto\" | \"librosa\" | \"madmom\",\n\t\t}));\n\t};\n\n\t/**\n\t * Main processing initiation function with comprehensive error handling\n\t *\n\t * This function:\n\t * 1. Validates track selection\n\t * 2. Sends processing settings to server\n\t * 3. Handles various error scenarios\n\t * 4. Provides user feedback through toast notifications\n\t * 5. Manages submission state to prevent duplicate requests\n\t */\n\tconst handleGenerateClick = async () => {\n\t\t// Validate track selection before proceeding\n\t\tif (!trackId) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"No track selected\",\n\t\t\t\tdescription: \"Please upload a track first.\",\n\t\t\t\tvariant: \"destructive\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Set submitting state to disable form and show loading feedback\n\t\tsetIsSubmitting(true);\n\n\t\ttry {\n\t\t\t// Send processing request with current settings to server\n\t\t\tconst response = await fetch(`/api/tracks/${trackId}/process`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(settings),\n\t\t\t});\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Failed to start processing: ${response.status} ${response.statusText}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Show success notification to user\n\t\t\ttoast({\n\t\t\t\ttitle: \"Processing Started\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Your track is now being processed. This may take a few minutes.\",\n\t\t\t});\n\n\t\t\t// Notify parent component that processing has begun\n\t\t\tonProcessingStart();\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Processing error:\", error);\n\n\t\t\t// Show error notification with descriptive message\n\t\t\ttoast({\n\t\t\t\ttitle: \"Processing Failed\",\n\t\t\t\tdescription:\n\t\t\t\t\t(error as Error).message || \"An unexpected error occurred.\",\n\t\t\t\tvariant: \"destructive\",\n\t\t\t});\n\t\t} finally {\n\t\t\t// Reset submission state regardless of outcome\n\t\t\tsetIsSubmitting(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='bg-white rounded-xl shadow-md p-6'>\n\t\t\t<h2 className='text-xl font-semibold mb-4'>Extension Settings</h2>\n\n\t\t\t<div className='space-y-4'>\n\t\t\t\t<div>\n\t\t\t\t\t<label className='block text-sm font-medium text-gray-700 mb-1'>\n\t\t\t\t\t\tIntro Length (bars)\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='bg-gray-200 px-2 py-1 rounded-l-md disabled:opacity-50'\n\t\t\t\t\t\t\tonClick={decrementIntroLength}\n\t\t\t\t\t\t\tdisabled={settings.introLength <= 8 || disabled}>\n\t\t\t\t\t\t\t<span className='material-icons text-sm'>remove</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className='px-4 py-1 bg-gray-100 text-center'>\n\t\t\t\t\t\t\t{settings.introLength}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='bg-gray-200 px-2 py-1 rounded-r-md disabled:opacity-50'\n\t\t\t\t\t\t\tonClick={incrementIntroLength}\n\t\t\t\t\t\t\tdisabled={settings.introLength >= 64 || disabled}>\n\t\t\t\t\t\t\t<span className='material-icons text-sm'>add</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tclassName='mt-6 w-full bg-gradient-to-r from-primary to-purple-600 text-white py-2 px-4 rounded-md font-medium shadow hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50'\n\t\t\t\tonClick={handleGenerateClick}\n\t\t\t\tdisabled={!trackId || isSubmitting || disabled}\n\t\t\t\tdata-generate-button='true'>\n\t\t\t\t{isSubmitting ? \"Starting Process...\" : \"Generate Extended Version\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default SettingsPanel;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\StreamingUploadSection.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1129,1132],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1129,1132],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":172,"column":33,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":172,"endColumn":36,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5012,5015],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5012,5015],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":190,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":190,"endColumn":18,"suggestions":[{"fix":{"range":[5656,5704],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":213,"column":67,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":213,"endColumn":70,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6214,6217],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6214,6217],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":347,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":347,"endColumn":18,"suggestions":[{"fix":{"range":[9302,9347],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":432,"column":42,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":432,"endColumn":45,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[11301,11304],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[11301,11304],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * StreamingUploadSection Component\r\n *\r\n * Enhanced file upload component with streaming capabilities for large audio files:\r\n * - Support for files up to 500MB (vs 15MB limit in regular upload)\r\n * - Real-time progress tracking with speed and ETA calculations\r\n * - Drag and drop interface with visual feedback\r\n * - Automatic retry logic for failed uploads\r\n * - Memory-efficient chunked uploads\r\n * - Comprehensive error handling and user feedback\r\n * - Seamless integration with existing Music DJ Feature workflow\r\n *\r\n * @format\r\n */\r\n\r\nimport React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\ninterface StreamingUploadSectionProps {\r\n\t/** Callback function triggered when upload completes successfully with the new track */\r\n\tonUploadSuccess: (track: any) => void;\r\n\t/** Optional callback for upload errors */\r\n\tonUploadError?: (error: string) => void;\r\n\t/** Maximum file size in bytes (default: 500MB) */\r\n\tmaxFileSize?: number;\r\n\t/** Allowed file formats */\r\n\tallowedFormats?: string[];\r\n}\r\n\r\ninterface UploadState {\r\n\tuploadId: string | null;\r\n\tfilename: string;\r\n\tfileSize: number;\r\n\tbytesUploaded: number;\r\n\tpercentage: number;\r\n\tstatus:\r\n\t\t| \"idle\"\r\n\t\t| \"initializing\"\r\n\t\t| \"uploading\"\r\n\t\t| \"processing\"\r\n\t\t| \"completed\"\r\n\t\t| \"error\";\r\n\terror: string | null;\r\n\tspeed: number; // bytes per second\r\n\testimatedTimeRemaining: number; // seconds\r\n}\r\n\r\ninterface UploadProgress {\r\n\tuploadId: string;\r\n\tfilename: string;\r\n\tbytesReceived: number;\r\n\ttotalBytes: number;\r\n\tpercentage: number;\r\n\tstatus: string;\r\n\tspeed: number;\r\n\testimatedTimeRemaining: number;\r\n\terror?: string;\r\n}\r\n\r\n/**\r\n * Format bytes to human readable string\r\n */\r\nconst formatBytes = (bytes: number): string => {\r\n\tif (bytes === 0) return \"0 Bytes\";\r\n\tconst k = 1024;\r\n\tconst sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\r\n\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n};\r\n\r\n/**\r\n * Format time to human readable string\r\n */\r\nconst formatTime = (seconds: number): string => {\r\n\tif (seconds < 60) return `${Math.round(seconds)}s`;\r\n\tconst minutes = Math.floor(seconds / 60);\r\n\tconst remainingSeconds = Math.round(seconds % 60);\r\n\treturn `${minutes}m ${remainingSeconds}s`;\r\n};\r\n\r\nexport const StreamingUploadSection: React.FC<StreamingUploadSectionProps> = ({\r\n\tonUploadSuccess,\r\n\tonUploadError,\r\n\tmaxFileSize = 500 * 1024 * 1024, // 500MB default\r\n\tallowedFormats = [\".mp3\", \".wav\", \".flac\", \".aiff\", \".m4a\", \".ogg\"],\r\n}) => {\r\n\tconst [uploadState, setUploadState] = useState<UploadState>({\r\n\t\tuploadId: null,\r\n\t\tfilename: \"\",\r\n\t\tfileSize: 0,\r\n\t\tbytesUploaded: 0,\r\n\t\tpercentage: 0,\r\n\t\tstatus: \"idle\",\r\n\t\terror: null,\r\n\t\tspeed: 0,\r\n\t\testimatedTimeRemaining: 0,\r\n\t});\r\n\r\n\tconst [isDragActive, setIsDragActive] = useState(false);\r\n\tconst [isUploading, setIsUploading] = useState(false);\r\n\tconst progressIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\tconst uploadStartTimeRef = useRef<number>(0);\r\n\tconst abortControllerRef = useRef<AbortController | null>(null);\r\n\tconst fileInputRef = useRef<HTMLInputElement>(null);\r\n\tconst { toast } = useToast();\r\n\r\n\t/**\r\n\t * Clean up intervals and abort controllers\r\n\t */\r\n\tconst cleanup = useCallback(() => {\r\n\t\tif (progressIntervalRef.current) {\r\n\t\t\tclearInterval(progressIntervalRef.current);\r\n\t\t\tprogressIntervalRef.current = null;\r\n\t\t}\r\n\t\tif (abortControllerRef.current) {\r\n\t\t\tabortControllerRef.current.abort();\r\n\t\t\tabortControllerRef.current = null;\r\n\t\t}\r\n\t\tsetIsUploading(false);\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Initialize upload session with the server\r\n\t */\r\n\tconst initializeUpload = async (file: File): Promise<string> => {\r\n\t\tconst response = await fetch(\"/api/streaming/upload/init\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tfilename: file.name,\r\n\t\t\t\tfileSize: file.size,\r\n\t\t\t\tcontentType: file.type,\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tconst error = await response.json();\r\n\t\t\tthrow new Error(error.message || \"Failed to initialize upload\");\r\n\t\t}\r\n\r\n\t\tconst data = await response.json();\r\n\t\treturn data.uploadId;\r\n\t};\r\n\r\n\t/**\r\n\t * Poll upload progress from server\r\n\t */\r\n\tconst pollProgress = useCallback(\r\n\t\tasync (uploadId: string) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(\r\n\t\t\t\t\t`/api/streaming/upload/progress/${uploadId}`\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(\"Failed to fetch progress\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst progress: UploadProgress = await response.json();\r\n\r\n\t\t\t\tsetUploadState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tbytesUploaded: progress.bytesReceived,\r\n\t\t\t\t\tpercentage: progress.percentage,\r\n\t\t\t\t\tstatus: progress.status as any,\r\n\t\t\t\t\terror: progress.error || null,\r\n\t\t\t\t\tspeed: progress.speed,\r\n\t\t\t\t\testimatedTimeRemaining: progress.estimatedTimeRemaining,\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Handle completion\r\n\t\t\t\tif (progress.status === \"completed\") {\r\n\t\t\t\t\tcleanup();\r\n\t\t\t\t\t// Since we're using streaming routes, we need to get the track data differently\r\n\t\t\t\t\t// The upload response should include the track data\r\n\t\t\t\t} else if (progress.status === \"error\") {\r\n\t\t\t\t\tcleanup();\r\n\t\t\t\t\tconst errorMessage = progress.error || \"Upload failed\";\r\n\t\t\t\t\tsetUploadState((prev) => ({ ...prev, error: errorMessage }));\r\n\t\t\t\t\tonUploadError?.(errorMessage);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Progress polling error:\", error);\r\n\t\t\t\t// Continue polling unless explicitly stopped\r\n\t\t\t}\r\n\t\t},\r\n\t\t[cleanup, onUploadError]\r\n\t);\r\n\r\n\t/**\r\n\t * Start progress polling\r\n\t */\r\n\tconst startProgressPolling = useCallback(\r\n\t\t(uploadId: string) => {\r\n\t\t\t// Poll every 500ms for smooth progress updates\r\n\t\t\tprogressIntervalRef.current = setInterval(() => {\r\n\t\t\t\tpollProgress(uploadId);\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\t[pollProgress]\r\n\t);\r\n\r\n\t/**\r\n\t * Upload file using streaming approach\r\n\t */\r\n\tconst uploadFile = async (file: File, uploadId: string): Promise<any> => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"audio\", file);\r\n\t\tformData.append(\"uploadId\", uploadId);\r\n\r\n\t\t// Create abort controller for cancellation\r\n\t\tabortControllerRef.current = new AbortController();\r\n\r\n\t\tconst response = await fetch(\"/api/streaming/upload/stream\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: formData,\r\n\t\t\tsignal: abortControllerRef.current.signal,\r\n\t\t\theaders: {\r\n\t\t\t\t\"X-Upload-ID\": uploadId,\r\n\t\t\t\t\"X-Filename\": file.name,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tconst error = await response.json();\r\n\t\t\tthrow new Error(error.message || \"Upload failed\");\r\n\t\t}\r\n\r\n\t\treturn response.json();\r\n\t};\r\n\r\n\t/**\r\n\t * Handle file upload process\r\n\t */\r\n\tconst handleUpload = useCallback(\r\n\t\tasync (file: File) => {\r\n\t\t\ttry {\r\n\t\t\t\tcleanup(); // Clean up any previous uploads\r\n\r\n\t\t\t\t// Validate file\r\n\t\t\t\tconst fileExtension = \".\" + file.name.split(\".\").pop()?.toLowerCase();\r\n\t\t\t\tif (!allowedFormats.includes(fileExtension)) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t`Unsupported file format. Allowed: ${allowedFormats.join(\", \")}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (file.size > maxFileSize) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t`File too large. Maximum size: ${formatBytes(maxFileSize)}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Initialize upload state\r\n\t\t\t\tsetUploadState({\r\n\t\t\t\t\tuploadId: null,\r\n\t\t\t\t\tfilename: file.name,\r\n\t\t\t\t\tfileSize: file.size,\r\n\t\t\t\t\tbytesUploaded: 0,\r\n\t\t\t\t\tpercentage: 0,\r\n\t\t\t\t\tstatus: \"initializing\",\r\n\t\t\t\t\terror: null,\r\n\t\t\t\t\tspeed: 0,\r\n\t\t\t\t\testimatedTimeRemaining: 0,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetIsUploading(true);\r\n\t\t\t\tuploadStartTimeRef.current = Date.now();\r\n\r\n\t\t\t\t// Initialize upload session\r\n\t\t\t\tconst uploadId = await initializeUpload(file);\r\n\r\n\t\t\t\tsetUploadState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tuploadId,\r\n\t\t\t\t\tstatus: \"uploading\",\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Start progress polling\r\n\t\t\t\tstartProgressPolling(uploadId);\r\n\r\n\t\t\t\t// Begin file upload\r\n\t\t\t\tconst result = await uploadFile(file, uploadId);\r\n\r\n\t\t\t\t// Upload completed successfully\r\n\t\t\t\tcleanup();\r\n\t\t\t\tsetUploadState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"completed\",\r\n\t\t\t\t\tpercentage: 100,\r\n\t\t\t\t}));\r\n\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Upload Successful\",\r\n\t\t\t\t\tdescription: \"Your large audio file has been uploaded successfully.\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Call success callback with track data\r\n\t\t\t\tonUploadSuccess(result);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tcleanup();\r\n\t\t\t\tconst errorMessage =\r\n\t\t\t\t\terror instanceof Error ? error.message : \"Upload failed\";\r\n\t\t\t\tsetUploadState((prev) => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tstatus: \"error\",\r\n\t\t\t\t\terror: errorMessage,\r\n\t\t\t\t}));\r\n\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Upload Failed\",\r\n\t\t\t\t\tdescription: errorMessage,\r\n\t\t\t\t\tvariant: \"destructive\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tonUploadError?.(errorMessage);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tallowedFormats,\r\n\t\t\tmaxFileSize,\r\n\t\t\tcleanup,\r\n\t\t\tstartProgressPolling,\r\n\t\t\tonUploadSuccess,\r\n\t\t\tonUploadError,\r\n\t\t\ttoast,\r\n\t\t]\r\n\t);\r\n\r\n\t/**\r\n\t * Cancel current upload\r\n\t */\r\n\tconst cancelUpload = useCallback(async () => {\r\n\t\tif (uploadState.uploadId) {\r\n\t\t\ttry {\r\n\t\t\t\tawait fetch(`/api/streaming/upload/${uploadState.uploadId}`, {\r\n\t\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Cancel upload error:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcleanup();\r\n\t\tsetUploadState((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tstatus: \"idle\",\r\n\t\t\tuploadId: null,\r\n\t\t\terror: null,\r\n\t\t}));\r\n\r\n\t\ttoast({\r\n\t\t\ttitle: \"Upload Cancelled\",\r\n\t\t\tdescription: \"The upload has been cancelled.\",\r\n\t\t});\r\n\t}, [uploadState.uploadId, cleanup, toast]);\r\n\r\n\t/**\r\n\t * Retry failed upload\r\n\t */\r\n\tconst retryUpload = useCallback(() => {\r\n\t\tsetUploadState((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tstatus: \"idle\",\r\n\t\t\terror: null,\r\n\t\t\tpercentage: 0,\r\n\t\t\tbytesUploaded: 0,\r\n\t\t}));\r\n\t}, []);\r\n\r\n\t/**\r\n\t * Handle drag events\r\n\t */\r\n\tconst handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsDragActive(true);\r\n\t};\r\n\r\n\tconst handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsDragActive(false);\r\n\t};\r\n\r\n\tconst handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsDragActive(false);\r\n\r\n\t\tif (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n\t\t\thandleUpload(e.dataTransfer.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUploadClick = () => {\r\n\t\tif (fileInputRef.current) {\r\n\t\t\tfileInputRef.current.click();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files && e.target.files.length > 0) {\r\n\t\t\thandleUpload(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\t// Cleanup on unmount\r\n\tuseEffect(() => {\r\n\t\treturn () => cleanup();\r\n\t}, [cleanup]);\r\n\r\n\t/**\r\n\t * Render upload status indicator\r\n\t */\r\n\tconst renderStatusBadge = () => {\r\n\t\tconst statusConfig = {\r\n\t\t\tidle: { color: \"secondary\", text: \"Ready\" },\r\n\t\t\tinitializing: { color: \"default\", text: \"Initializing\" },\r\n\t\t\tuploading: { color: \"default\", text: \"Uploading\" },\r\n\t\t\tprocessing: { color: \"default\", text: \"Processing\" },\r\n\t\t\tcompleted: { color: \"default\", text: \"Completed\" },\r\n\t\t\terror: { color: \"destructive\", text: \"Error\" },\r\n\t\t};\r\n\r\n\t\tconst config = statusConfig[uploadState.status];\r\n\r\n\t\treturn <Badge variant={config.color as any}>{config.text}</Badge>;\r\n\t};\r\n\r\n\t/**\r\n\t * Render progress information\r\n\t */\r\n\tconst renderProgressInfo = () => {\r\n\t\tif (uploadState.status === \"idle\") return null;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='space-y-3'>\r\n\t\t\t\t<div className='flex items-center justify-between'>\r\n\t\t\t\t\t<span className='text-sm font-medium'>{uploadState.filename}</span>\r\n\t\t\t\t\t{renderStatusBadge()}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{uploadState.status !== \"completed\" &&\r\n\t\t\t\t\tuploadState.status !== \"error\" && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Progress value={uploadState.percentage} className='w-full' />\r\n\r\n\t\t\t\t\t\t\t<div className='flex justify-between text-xs text-muted-foreground'>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{formatBytes(uploadState.bytesUploaded)} /{\" \"}\r\n\t\t\t\t\t\t\t\t\t{formatBytes(uploadState.fileSize)}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span>{uploadState.percentage}%</span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{uploadState.speed > 0 && (\r\n\t\t\t\t\t\t\t\t<div className='flex justify-between text-xs text-muted-foreground'>\r\n\t\t\t\t\t\t\t\t\t<span>Speed: {formatBytes(uploadState.speed)}/s</span>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tETA: {formatTime(uploadState.estimatedTimeRemaining)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t{uploadState.error && (\r\n\t\t\t\t\t<Alert variant='destructive'>\r\n\t\t\t\t\t\t<AlertDescription>{uploadState.error}</AlertDescription>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className='flex gap-2'>\r\n\t\t\t\t\t{(uploadState.status === \"uploading\" ||\r\n\t\t\t\t\t\tuploadState.status === \"processing\" ||\r\n\t\t\t\t\t\tuploadState.status === \"initializing\") && (\r\n\t\t\t\t\t\t<Button onClick={cancelUpload} variant='outline' size='sm'>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{uploadState.status === \"error\" && (\r\n\t\t\t\t\t\t<Button onClick={retryUpload} variant='outline' size='sm'>\r\n\t\t\t\t\t\t\tRetry\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className='w-full'>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardTitle className='flex items-center gap-2'>\r\n\t\t\t\t\t<span className='material-icons'>cloud_upload</span>\r\n\t\t\t\t\tLarge File Upload (up to 500MB)\r\n\t\t\t\t</CardTitle>\r\n\t\t\t</CardHeader>\r\n\t\t\t<CardContent className='space-y-4'>\r\n\t\t\t\t{uploadState.status === \"idle\" ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`\r\n              border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\r\n              ${\r\n\t\t\t\t\t\t\t\tisDragActive\r\n\t\t\t\t\t\t\t\t\t? \"border-primary bg-primary/5\"\r\n\t\t\t\t\t\t\t\t\t: \"border-muted-foreground/25 hover:border-primary/50\"\r\n\t\t\t\t\t\t\t}\r\n              ${isUploading ? \"pointer-events-none opacity-50\" : \"\"}\r\n            `}\r\n\t\t\t\t\t\tonClick={handleUploadClick}\r\n\t\t\t\t\t\tonDragOver={handleDragOver}\r\n\t\t\t\t\t\tonDragLeave={handleDragLeave}\r\n\t\t\t\t\t\tonDrop={handleDrop}>\r\n\t\t\t\t\t\t<span className='material-icons text-5xl text-primary-light mb-4'>\r\n\t\t\t\t\t\t\tcloud_upload\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className='text-lg font-medium mb-2'>\r\n\t\t\t\t\t\t\t{isDragActive\r\n\t\t\t\t\t\t\t\t? \"Drop your large audio file here\"\r\n\t\t\t\t\t\t\t\t: \"Drag & drop large audio file or click to browse\"}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className='text-sm text-muted-foreground mb-4'>\r\n\t\t\t\t\t\t\tSupports {allowedFormats.join(\", \")} up to{\" \"}\r\n\t\t\t\t\t\t\t{formatBytes(maxFileSize)}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<Button variant='outline' disabled={isUploading}>\r\n\t\t\t\t\t\t\tSelect Large Audio File\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\tref={fileInputRef}\r\n\t\t\t\t\t\t\tonChange={handleFileChange}\r\n\t\t\t\t\t\t\taccept={allowedFormats.join(\",\")}\r\n\t\t\t\t\t\t\tclassName='hidden'\r\n\t\t\t\t\t\t\tdisabled={isUploading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\trenderProgressInfo()\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className='text-xs text-muted-foreground space-y-1 bg-blue-50 p-3 rounded-lg'>\r\n\t\t\t\t\t<p className='font-medium text-blue-800'>\r\n\t\t\t\t\t\t🚀 Streaming Upload Features:\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>• Large files up to 500MB (33x larger than standard upload)</p>\r\n\t\t\t\t\t<p>• Memory-efficient processing with real-time progress tracking</p>\r\n\t\t\t\t\t<p>• Automatic retry and cancellation capabilities</p>\r\n\t\t\t\t\t<p>• Same audio processing and analysis as regular uploads</p>\r\n\t\t\t\t</div>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default StreamingUploadSection;\r\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\TrackPreview.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'AudioTrack' is defined but never used.","line":5,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":20}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport TrackView from \"@/components/TrackView\";\nimport { AudioTrack } from \"@shared/schema\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n/**\n * TrackPreview Component\n *\n * A comprehensive track visualization and comparison interface that displays audio tracks\n * in multiple views and states. This component serves as the main track display hub with:\n *\n * Core Features:\n * - Tabbed interface for original vs extended track comparison\n * - Real-time data fetching with React Query for optimal caching\n * - Automatic tab switching based on processing completion\n * - Visual track structure comparison with duration breakdowns\n * - Simulated waveform visualization for both versions\n * - Download functionality for completed extended tracks\n * - Comprehensive empty states for various scenarios\n *\n * State Management:\n * - Active tab state (original, extended, comparison)\n * - Automatic tab transitions during processing lifecycle\n * - Conditional rendering based on track processing status\n *\n * The component adapts its interface based on track availability and processing state,\n * providing appropriate feedback for each phase of the audio processing workflow.\n */\ninterface TrackPreviewProps {\n\t/** ID of the track to display, null when no track selected */\n\ttrackId: number | null;\n\t/** Whether the track processing has completed successfully */\n\tisProcessed: boolean;\n}\n\nconst TrackPreview: React.FC<TrackPreviewProps> = ({\n\ttrackId,\n\tisProcessed,\n}) => {\n\t// Active tab state management for switching between track views\n\tconst [activeTab, setActiveTab] = useState<\n\t\t\"original\" | \"extended\" | \"comparison\"\n\t>(\"original\");\n\n\t// React Query for optimized track data fetching with automatic caching\n\tconst { data: track, isLoading } = useQuery({\n\t\tqueryKey: trackId ? [`/api/tracks/${trackId}`] : [\"no-track\"],\n\t\tenabled: Boolean(trackId),\n\t});\n\n\t/**\n\t * Reset to original tab when track changes or initially loads\n\t * Ensures consistent starting state for new track selections\n\t */\n\tuseEffect(() => {\n\t\tsetActiveTab(\"original\");\n\t}, [trackId]);\n\n\t/**\n\t * Automatically switch to extended tab when processing completes\n\t * Provides smooth UX by showing results immediately after processing\n\t */\n\tuseEffect(() => {\n\t\tif (isProcessed) {\n\t\t\tsetActiveTab(\"extended\");\n\t\t}\n\t}, [isProcessed]);\n\n\t/**\n\t * Handle tab navigation with state management\n\t * Allows users to switch between different track views\n\t */\n\tconst handleTabClick = (tab: \"original\" | \"extended\" | \"comparison\") => {\n\t\tsetActiveTab(tab);\n\t};\n\n\t/**\n\t * Renders contextual empty states for different scenarios\n\t * Provides clear guidance when tracks or features are unavailable\n\t *\n\t * @param type - The type of empty state to render (extended or comparison)\n\t */\n\tconst renderEmptyState = (type: string) => (\n\t\t<div className='p-8 flex flex-col items-center justify-center border-2 border-dashed border-gray-300 rounded-lg text-center text-gray-400'>\n\t\t\t{type === \"extended\" ? (\n\t\t\t\t// Empty state for missing extended version\n\t\t\t\t<>\n\t\t\t\t\t<span className='material-icons text-5xl mb-4'>audio_file</span>\n\t\t\t\t\t<h3 className='text-lg font-medium mb-2'>No Extended Version Yet</h3>\n\t\t\t\t\t<p className='mb-4'>\n\t\t\t\t\t\tUpload a track and generate an extended version to see the results\n\t\t\t\t\t\there\n\t\t\t\t\t</p>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t// Empty state for missing comparison data\n\t\t\t\t<>\n\t\t\t\t\t<span className='material-icons text-5xl mb-4'>compare</span>\n\t\t\t\t\t<h3 className='text-lg font-medium mb-2'>No Comparison Available</h3>\n\t\t\t\t\t<p className='mb-4'>\n\t\t\t\t\t\tGenerate an extended version first to compare with the original\n\t\t\t\t\t</p>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\tconst renderTrackTabs = () => (\n\t\t<>\n\t\t\t<div className='border-b border-gray-200 mb-6'>\n\t\t\t\t<ul className='flex -mb-px'>\n\t\t\t\t\t{track?.status === \"completed\" || track?.status === \"regenerate\" ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<li className='mr-4'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`inline-block pb-3 px-1 font-medium ${\n\t\t\t\t\t\t\t\t\t\tactiveTab === \"original\"\n\t\t\t\t\t\t\t\t\t\t\t? \"text-primary border-b-2 border-primary\"\n\t\t\t\t\t\t\t\t\t\t\t: \"text-gray-500 hover:text-gray-700\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tonClick={() => handleTabClick(\"original\")}>\n\t\t\t\t\t\t\t\t\tOriginal Track\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='mr-4'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`inline-block pb-3 px-1 font-medium ${\n\t\t\t\t\t\t\t\t\t\tactiveTab === \"extended\"\n\t\t\t\t\t\t\t\t\t\t\t? \"text-primary border-b-2 border-primary\"\n\t\t\t\t\t\t\t\t\t\t\t: track?.status === \"completed\" ||\n\t\t\t\t\t\t\t\t\t\t\t  track?.status === \"regenerate\"\n\t\t\t\t\t\t\t\t\t\t\t? \"text-gray-500 hover:text-gray-700\"\n\t\t\t\t\t\t\t\t\t\t\t: \"text-white\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tonClick={() => handleTabClick(\"extended\")}>\n\t\t\t\t\t\t\t\t\tExtended Version\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button className='inline-block pb-3 px-1 font-medium text-primary border-b-2 border-primary'>\n\t\t\t\t\t\t\t\tOriginal Track\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclassName={`tab-content ${activeTab === \"original\" ? \"\" : \"hidden\"}`}>\n\t\t\t\t{track && <TrackView track={track} type='original' version={0} />}\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclassName={`tab-content ${activeTab === \"extended\" ? \"\" : \"hidden\"}`}>\n\t\t\t\t{isProcessed && track ? (\n\t\t\t\t\t<TrackView\n\t\t\t\t\t\ttrack={track}\n\t\t\t\t\t\ttype='extended'\n\t\t\t\t\t\tversion={(track.extendedPaths?.length || 1) - 1}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\trenderEmptyState(\"extended\")\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclassName={`tab-content ${activeTab === \"comparison\" ? \"\" : \"hidden\"}`}>\n\t\t\t\t{(isProcessed || track?.extendedPaths?.length > 0) && track ? (\n\t\t\t\t\t<div className='space-y-6'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4 className='font-medium mb-2'>Track Structure Comparison</h4>\n\t\t\t\t\t\t\t<div className='grid grid-cols-1 gap-3'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium mb-1'>\n\t\t\t\t\t\t\t\t\t\tOriginal (\n\t\t\t\t\t\t\t\t\t\t{track.duration\n\t\t\t\t\t\t\t\t\t\t\t? `${Math.floor(track.duration / 60)}:${(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrack.duration % 60\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.padStart(2, \"0\")}`\n\t\t\t\t\t\t\t\t\t\t\t: \"--:--\"}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<div className='h-12 w-full bg-gray-100 rounded overflow-hidden flex'>\n\t\t\t\t\t\t\t\t\t\t<div className='w-4/5 bg-gray-600 flex-shrink-0 flex items-center justify-center text-xs text-white'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Main Song</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='w-1/5 bg-gray-400 flex-shrink-0 flex items-center justify-center text-xs text-white'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Outro</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium mb-1'>\n\t\t\t\t\t\t\t\t\t\tExtended (\n\t\t\t\t\t\t\t\t\t\t{track.extendedDurations?.[\n\t\t\t\t\t\t\t\t\t\t\t(track.extendedPaths?.length || 1) - 1\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t? `${Math.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrack.extendedDurations[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(track.extendedPaths?.length || 1) - 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t] / 60\n\t\t\t\t\t\t\t\t\t\t\t  )}:${(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrack.extendedDurations[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(track.extendedPaths?.length || 1) - 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t] % 60\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.padStart(2, \"0\")}`\n\t\t\t\t\t\t\t\t\t\t\t: \"--:--\"}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<div className='h-12 w-full bg-gray-100 rounded overflow-hidden flex'>\n\t\t\t\t\t\t\t\t\t\t<div className='w-1/5 bg-primary flex-shrink-0 flex items-center justify-center text-xs text-white'>\n\t\t\t\t\t\t\t\t\t\t\t<span>{track.settings?.introLength}-bar Intro</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='w-3/5 bg-gray-600 flex-shrink-0 flex items-center justify-center text-xs text-white rounded-sm'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Main Song</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4 className='font-medium mb-2'>Waveform Comparison</h4>\n\t\t\t\t\t\t\t<div className='grid grid-cols-1 gap-4'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium mb-1'>Original</p>\n\t\t\t\t\t\t\t\t\t<div className='waveform-container h-20 bg-gray-900 rounded-lg'>\n\t\t\t\t\t\t\t\t\t\t<div className='waveform'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='waveform-bars'>\n\t\t\t\t\t\t\t\t\t\t\t\t{Array(120)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((_, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`original-waveform-${i}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='waveform-bar bg-gradient-to-t from-primary to-purple-600'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: `${Math.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.random() * 70 + 10\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}px`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"3px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 1px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium mb-1'>Extended</p>\n\t\t\t\t\t\t\t\t\t<div className='waveform-container h-20 bg-gray-900 rounded-lg'>\n\t\t\t\t\t\t\t\t\t\t<div className='waveform'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='waveform-bars'>\n\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t{Array(150)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((_, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`extended-waveform-${i}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='waveform-bar bg-gradient-to-t from-primary to-purple-600'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: `${Math.floor(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.random() * 70 + 10\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}px`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"3px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 1px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='mt-4 flex justify-center'>\n\t\t\t\t\t\t\t{track && track.status === \"completed\" && (\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={`/api/tracks/${track.id}/download?version=${\n\t\t\t\t\t\t\t\t\t\t(track.extendedPaths?.length || 1) - 1\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tclassName='inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary'\n\t\t\t\t\t\t\t\t\tdownload>\n\t\t\t\t\t\t\t\t\t<span className='material-icons text-sm mr-1'>download</span>\n\t\t\t\t\t\t\t\t\tDownload Extended Mix\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\trenderEmptyState(\"comparison\")\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n\n\tconst renderLoadingState = () => (\n\t\t<div className='p-12 flex justify-center items-center'>\n\t\t\t<div className='animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary'></div>\n\t\t</div>\n\t);\n\n\tconst renderEmptyTrackState = () => (\n\t\t<div className='p-8 flex flex-col items-center justify-center border-2 border-dashed border-gray-300 rounded-lg text-center text-gray-400'>\n\t\t\t<span className='material-icons text-5xl mb-4'>music_note</span>\n\t\t\t<h3 className='text-lg font-medium mb-2'>No Track Selected</h3>\n\t\t\t<p className='mb-4'>\n\t\t\t\tUpload a track to see its details and create an extended version\n\t\t\t</p>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className='bg-white rounded-xl shadow-md p-6'>\n\t\t\t<h2 className='text-xl font-semibold mb-4'>Track Preview</h2>\n\n\t\t\t{isLoading\n\t\t\t\t? renderLoadingState()\n\t\t\t\t: !trackId\n\t\t\t\t? renderEmptyTrackState()\n\t\t\t\t: renderTrackTabs()}\n\t\t</div>\n\t);\n};\n\nexport default TrackPreview;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\TrackView.tsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":65,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":65,"endColumn":19,"suggestions":[{"fix":{"range":[2072,2119],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":19,"suggestions":[{"fix":{"range":[3713,3760],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'updateTime' is assigned a value but never used.","line":149,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":149,"endColumn":20},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":248,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":248,"endColumn":17,"suggestions":[{"fix":{"range":[6801,6845],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @format */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { AudioTrack } from \"@shared/schema\";\nimport { formatDuration } from \"@/lib/audio\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport VersionPlayer from \"./VersionPlayer\";\n\ninterface TrackViewProps {\n\ttrack: AudioTrack;\n\ttype: \"original\" | \"extended\";\n\tversion: number;\n}\n\nconst TrackView: React.FC<TrackViewProps> = ({ track, type, version }) => {\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [currentTime, setCurrentTime] = useState(0);\n\tconst [duration, setDuration] = useState(0);\n\tconst [isProcessing, setIsProcessing] = useState(() => {\n\t\treturn (\n\t\t\tlocalStorage.getItem(`processing_${track.id}`) === \"processing\" ||\n\t\t\tlocalStorage.getItem(`processing_${track.id}`) === \"regenerate\"\n\t\t);\n\t});\n\n\tconst audioRef = useRef<HTMLAudioElement>(null);\n\tconst progressIntervalRef = useRef<number>();\n\tconst statusIntervalRef = useRef<number>(); // Added ref for status polling interval\n\tconst { toast } = useToast();\n\n\tconst displayTitle =\n\t\ttype === \"original\"\n\t\t\t? track.originalFilename\n\t\t\t: `${track.originalFilename.replace(/\\.[^/.]+$/, \"\")} (Extended Mix v${\n\t\t\t\t\tversion + 1\n\t\t\t  })${track.originalFilename.match(/\\.[^/.]+$/)?.[0] || \"\"}`;\n\n\tconst displayDuration =\n\t\ttype === \"original\"\n\t\t\t? track.duration || 0\n\t\t\t: track.extendedDurations?.[version] || 0;\n\n\tconst displayDetails = `${\n\t\ttype === \"original\" ? \"Original\" : \"Extended\"\n\t} • ${formatDuration(displayDuration)} ${\n\t\ttrack.bpm ? `• ${track.bpm} BPM` : \"\"\n\t}`;\n\n\t// Initial status check effect\n\tuseEffect(() => {\n\t\tif (isProcessing) {\n\t\t\tconst checkInitialStatus = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`/api/tracks/${track.id}/status`);\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tif (data.status === \"completed\") {\n\t\t\t\t\t\tsetIsProcessing(false);\n\t\t\t\t\t\tlocalStorage.removeItem(`processing_${track.id}`);\n\t\t\t\t\t\tqueryClient.invalidateQueries({\n\t\t\t\t\t\t\tqueryKey: [`/api/tracks/${track.id}`],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Error checking status:\", error);\n\t\t\t\t}\n\t\t\t};\n\t\t\tcheckInitialStatus();\n\t\t}\n\t}, [track.id]);\n\n\t// Status polling effect\n\tuseEffect(() => {\n\t\tif (isProcessing) {\n\t\t\tconst pollStatus = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`/api/tracks/${track.id}/status`, {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Cache-Control\": \"no-cache\",\n\t\t\t\t\t\t\tPragma: \"no-cache\",\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!response.ok) throw new Error(\"Status check failed\");\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\tif (data.status === \"processing\" || data.status === \"regenerate\") {\n\t\t\t\t\t\tlocalStorage.setItem(`processing_${track.id}`, data.status);\n\t\t\t\t\t} else if (data.status === \"completed\") {\n\t\t\t\t\t\tsetIsProcessing(false);\n\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\tqueryKey: [`/api/tracks/${track.id}`],\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlocalStorage.removeItem(`processing_${track.id}`);\n\n\t\t\t\t\t\t// Clear the interval\n\t\t\t\t\t\tif (statusIntervalRef.current) {\n\t\t\t\t\t\t\tclearInterval(statusIntervalRef.current);\n\t\t\t\t\t\t\tstatusIntervalRef.current = undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\t\t\tdescription: \"Track processing completed!\",\n\t\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (data.status === \"error\") {\n\t\t\t\t\t\tsetIsProcessing(false);\n\t\t\t\t\t\tlocalStorage.removeItem(`processing_${track.id}`);\n\n\t\t\t\t\t\t// Clear the interval\n\t\t\t\t\t\tif (statusIntervalRef.current) {\n\t\t\t\t\t\t\tclearInterval(statusIntervalRef.current);\n\t\t\t\t\t\t\tstatusIntervalRef.current = undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\t\t\tdescription: \"Processing failed\",\n\t\t\t\t\t\t\tvariant: \"destructive\",\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Error in status check:\", error);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Initial poll\n\t\t\tpollStatus();\n\n\t\t\t// Set up polling interval\n\t\t\tstatusIntervalRef.current = window.setInterval(pollStatus, 2000);\n\n\t\t\t// Return cleanup function\n\t\t\treturn () => {\n\t\t\t\tif (statusIntervalRef.current) {\n\t\t\t\t\tclearInterval(statusIntervalRef.current);\n\t\t\t\t\tstatusIntervalRef.current = undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, [isProcessing, track.id, toast]);\n\n\tuseEffect(() => {\n\t\tif (audioRef.current) {\n\t\t\tconst audio = audioRef.current;\n\n\t\t\tconst updateTime = () => {\n\t\t\t\tsetCurrentTime(audio.currentTime);\n\t\t\t};\n\n\t\t\tconst onLoadedMetadata = () => {\n\t\t\t\tsetDuration(audio.duration);\n\t\t\t};\n\n\t\t\tconst onEnded = () => {\n\t\t\t\tsetIsPlaying(false);\n\t\t\t\tsetCurrentTime(0);\n\t\t\t\tclearInterval(progressIntervalRef.current);\n\t\t\t};\n\n\t\t\taudio.addEventListener(\"loadedmetadata\", onLoadedMetadata);\n\t\t\taudio.addEventListener(\"ended\", onEnded);\n\n\t\t\treturn () => {\n\t\t\t\taudio.removeEventListener(\"loadedmetadata\", onLoadedMetadata);\n\t\t\t\taudio.removeEventListener(\"ended\", onEnded);\n\t\t\t\tclearInterval(progressIntervalRef.current);\n\t\t\t};\n\t\t}\n\t}, [track.id, type]);\n\n\tconst togglePlayPause = () => {\n\t\tif (!audioRef.current) return;\n\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.pause();\n\t\t\tclearInterval(progressIntervalRef.current);\n\t\t\tsetIsPlaying(false);\n\t\t} else {\n\t\t\taudioRef.current.play();\n\t\t\tprogressIntervalRef.current = window.setInterval(() => {\n\t\t\t\tif (audioRef.current) {\n\t\t\t\t\tsetCurrentTime(audioRef.current.currentTime);\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t\tsetIsPlaying(true);\n\t\t}\n\t};\n\n\tconst handleSkipBack = () => {\n\t\tif (!audioRef.current) return;\n\t\taudioRef.current.currentTime = Math.max(\n\t\t\t0,\n\t\t\taudioRef.current.currentTime - 10\n\t\t);\n\t\tsetCurrentTime(audioRef.current.currentTime);\n\t};\n\n\tconst handleSkipForward = () => {\n\t\tif (!audioRef.current) return;\n\t\taudioRef.current.currentTime = Math.min(\n\t\t\taudioRef.current.duration,\n\t\t\taudioRef.current.currentTime + 10\n\t\t);\n\t\tsetCurrentTime(audioRef.current.currentTime);\n\t};\n\n\tconst handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n\t\tif (!audioRef.current || !duration) return;\n\n\t\tconst progressBar = e.currentTarget;\n\t\tconst rect = progressBar.getBoundingClientRect();\n\t\tconst pos = (e.clientX - rect.left) / rect.width;\n\t\tconst newTime = pos * duration;\n\n\t\taudioRef.current.currentTime = newTime;\n\t\tsetCurrentTime(newTime);\n\t};\n\n\tconst handleRegenerate = async () => {\n\t\ttry {\n\t\t\tsetIsProcessing(true);\n\t\t\tconst processResponse = await fetch(`/api/tracks/${track.id}/process`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(track.settings),\n\t\t\t});\n\n\t\t\tif (!processResponse.ok) {\n\t\t\t\tthrow new Error(\"Failed to start regeneration\");\n\t\t\t}\n\n\t\t\t// Initial check to update localStorage\n\t\t\tconst initialStatusResponse = await fetch(\n\t\t\t\t`/api/tracks/${track.id}/status`\n\t\t\t);\n\t\t\tif (initialStatusResponse.ok) {\n\t\t\t\tconst data = await initialStatusResponse.json();\n\t\t\t\tlocalStorage.setItem(`processing_${track.id}`, data.status);\n\t\t\t}\n\n\t\t\t// The polling will now be handled by the useEffect\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Regeneration error:\", error);\n\t\t\ttoast({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tdescription: \"Failed to regenerate extended mix\",\n\t\t\t\tvariant: \"destructive\",\n\t\t\t\tduration: 5000,\n\t\t\t});\n\t\t\tsetIsProcessing(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='flex flex-col md:flex-row items-center md:items-start gap-4 mb-6'>\n\t\t\t\t<div className='w-32 h-32 bg-gradient-to-br from-gray-800 to-gray-900 rounded-lg flex items-center justify-center shadow-md flex-shrink-0'>\n\t\t\t\t\t<span className='material-icons text-white text-5xl'>\n\t\t\t\t\t\t{type === \"original\" ? \"music_note\" : \"equalizer\"}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='flex-1'>\n\t\t\t\t\t<div className='text-center md:text-left mb-2'>\n\t\t\t\t\t\t<h3 className='text-xl font-bold'>{displayTitle}</h3>\n\t\t\t\t\t\t<p className='text-gray-500'>{displayDetails}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='flex flex-col gap-2 text-sm'>\n\t\t\t\t\t\t<div className='flex flex-wrap items-center gap-4'>\n\t\t\t\t\t\t\t<div className='flex items-center gap-2'>\n\t\t\t\t\t\t\t\t<span className='text-gray-500'>Format:</span>\n\t\t\t\t\t\t\t\t<span className='font-medium'>\n\t\t\t\t\t\t\t\t\t{track.format\n\t\t\t\t\t\t\t\t\t\t? `${track.format.toUpperCase()}${\n\t\t\t\t\t\t\t\t\t\t\t\ttrack.bitrate\n\t\t\t\t\t\t\t\t\t\t\t\t\t? `, ${Math.round(track.bitrate / 1000)}kbps`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: \"Unknown\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='flex items-center gap-2'>\n\t\t\t\t\t\t\t\t<span className='text-gray-500'>Key:</span>\n\t\t\t\t\t\t\t\t<span className='font-medium'>{track.key || \"Unknown\"}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='flex flex-wrap items-center gap-4'>\n\t\t\t\t\t\t\t<div className='flex items-center gap-2'>\n\t\t\t\t\t\t\t\t<span className='text-gray-500'>Tempo:</span>\n\t\t\t\t\t\t\t\t<span className='font-medium'>\n\t\t\t\t\t\t\t\t\t{track.bpm ? `${track.bpm} BPM` : \"Unknown\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='flex items-center gap-2'>\n\t\t\t\t\t\t\t\t<span className='text-gray-500'>Duration:</span>\n\t\t\t\t\t\t\t\t<span className='font-medium'>\n\t\t\t\t\t\t\t\t\t{formatDuration(displayDuration)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{type === \"extended\" && (\n\t\t\t\t\t\t\t<div className='flex items-center gap-2'>\n\t\t\t\t\t\t\t\t<span className='text-gray-500'>Intro Length:</span>\n\t\t\t\t\t\t\t\t<span className='font-medium'>\n\t\t\t\t\t\t\t\t\t{track.settings?.introLength} bars\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{type === \"original\" && (\n\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t<h4 className='font-medium mb-2'>Waveform</h4>\n\t\t\t\t\t<div className='waveform-container bg-gray-900 rounded-lg'>\n\t\t\t\t\t\t<div className='waveform'>\n\t\t\t\t\t\t\t<div className='waveform-bars flex items-center h-full p-4'>\n\t\t\t\t\t\t\t\t{Array(type === \"original\" ? 120 : 150)\n\t\t\t\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t\t\t\t.map((_, i) => {\n\t\t\t\t\t\t\t\t\t\tconst isIntroSection =\n\t\t\t\t\t\t\t\t\t\t\ttype === \"extended\" &&\n\t\t\t\t\t\t\t\t\t\t\ti <=\n\t\t\t\t\t\t\t\t\t\t\t\t((track.settings?.introLength || 16) / track.bpm) *\n\t\t\t\t\t\t\t\t\t\t\t\t\t60 *\n\t\t\t\t\t\t\t\t\t\t\t\t\t(150 / duration);\n\t\t\t\t\t\t\t\t\t\tconst isCurrentlyPlaying =\n\t\t\t\t\t\t\t\t\t\t\ti / (type === \"original\" ? 120 : 150) <=\n\t\t\t\t\t\t\t\t\t\t\tcurrentTime / duration;\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`waveform-bar-${i}`}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"waveform-bar transition-colors duration-300\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: `${Math.floor(Math.random() * 70 + 10)}px`,\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 1px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype === \"extended\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? isCurrentlyPlaying\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? isIntroSection\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"linear-gradient(to top, #10b981, #34d399)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"linear-gradient(to top, #7c3aed, #a78bfa)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: isIntroSection\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"linear-gradient(to top, #064e3b, #065f46)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"linear-gradient(to top, #4c1d95, #5b21b6)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: isCurrentlyPlaying\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"linear-gradient(to top, #7c3aed, #a78bfa)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"linear-gradient(to top, #4b5563, #6b7280)\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='player-progress mt-2 mb-2 h-2 bg-gray-200 rounded-full overflow-hidden cursor-pointer relative'\n\t\t\t\t\t\tonClick={handleProgressClick}>\n\t\t\t\t\t\t{type === \"extended\" && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName='h-full bg-gradient-to-r from-emerald-500 to-emerald-400 absolute'\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: `${\n\t\t\t\t\t\t\t\t\t\t((track.settings?.introLength || 16) / track.bpm) *\n\t\t\t\t\t\t\t\t\t\t60 *\n\t\t\t\t\t\t\t\t\t\t(100 / duration)\n\t\t\t\t\t\t\t\t\t}%`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='h-full bg-gradient-to-r from-purple-600 to-purple-400 transition-all duration-300'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: `${(currentTime / (duration || 1)) * 100}%`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='player-controls flex items-center'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='p-2 rounded-full hover:bg-gray-100'\n\t\t\t\t\t\t\tonClick={handleSkipBack}>\n\t\t\t\t\t\t\t<span className='material-icons'>skip_previous</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='p-2 rounded-full hover:bg-gray-100'\n\t\t\t\t\t\t\tonClick={togglePlayPause}>\n\t\t\t\t\t\t\t<span className='material-icons'>\n\t\t\t\t\t\t\t\t{isPlaying ? \"pause\" : \"play_arrow\"}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='p-2 rounded-full hover:bg-gray-100'\n\t\t\t\t\t\t\tonClick={handleSkipForward}>\n\t\t\t\t\t\t\t<span className='material-icons'>skip_next</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<span className='text-sm text-gray-500 ml-2 -mt-2'>\n\t\t\t\t\t\t\t{formatDuration(currentTime)} / {formatDuration(duration)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{type === \"extended\" && track.extendedPaths?.length > 0 && (\n\t\t\t\t<div className='mt-4'>\n\t\t\t\t\t<div className='flex items-center gap-4 mb-2 text-xs'>\n\t\t\t\t\t\t<div className='flex items-center gap-1'>\n\t\t\t\t\t\t\t<div className='w-3 h-3 rounded-sm bg-gradient-to-t from-[#10b981] to-[#34d399]'></div>\n\t\t\t\t\t\t\t<span>Intro</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='flex items-center gap-1'>\n\t\t\t\t\t\t\t<div className='w-3 h-3 rounded-sm bg-gradient-to-t from-[#7c3aed] to-[#a78bfa]'></div>\n\t\t\t\t\t\t\t<span>Main</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='grid grid-cols-1 gap-6'>\n\t\t\t\t\t\t{(track.extendedPaths || []).map((path, idx) => (\n\t\t\t\t\t\t\t<VersionPlayer\n\t\t\t\t\t\t\t\tkey={`${track.id}-version-${idx}`}\n\t\t\t\t\t\t\t\ttrack={track}\n\t\t\t\t\t\t\t\tversion={idx}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{(track.extendedPaths?.length || 0) < 3 && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className='text-sm text-gray-500 mb-2'>\n\t\t\t\t\t\t\t\t\tRegenerations remaining:{\" \"}\n\t\t\t\t\t\t\t\t\t{2 - ((track.extendedPaths?.length || 1) - 1)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50'\n\t\t\t\t\t\t\t\t\tonClick={handleRegenerate}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\ttrack.status === \"processing\" ||\n\t\t\t\t\t\t\t\t\t\tisProcessing ||\n\t\t\t\t\t\t\t\t\t\t(track.extendedPaths?.length || 0) >= 3\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t{isProcessing ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='animate-spin -ml-1 mr-2 h-4 w-4 text-white'\n\t\t\t\t\t\t\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\t\t\t\t\t\t\t\tfill='none'\n\t\t\t\t\t\t\t\t\t\t\t\tviewBox='0 0 24 24'>\n\t\t\t\t\t\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='opacity-25'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcx='12'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcy='12'\n\t\t\t\t\t\t\t\t\t\t\t\t\tr='10'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke='currentColor'\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth='4'></circle>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='opacity-75'\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\t\t\t\t\t\t\td='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'></path>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\tProcessing...\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<span className='material-icons text-sm mr-1'>\n\t\t\t\t\t\t\t\t\t\t\t\tautorenew\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\tRegenerate Extended Mix\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<audio\n\t\t\t\tref={audioRef}\n\t\t\t\tsrc={`/api/audio/${track.id}/${type}`}\n\t\t\t\tpreload='metadata'\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default TrackView;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\UploadSection.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'apiRequest' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'error' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":15},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":166,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":166,"endColumn":17,"suggestions":[{"fix":{"range":[5143,5181],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":189,"column":7,"nodeType":"Program","messageId":"trailingSpace","endLine":189,"endColumn":8,"fix":{"range":[5739,5740],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":227,"column":8,"nodeType":"Program","messageId":"trailingSpace","endLine":227,"endColumn":9,"fix":{"range":[7124,7125],"text":""}}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"/** @format */\n\nimport React, { useState, useRef } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { error } from \"console\";\n\n/**\n * UploadSection Component\n *\n * A sophisticated file upload interface that handles audio file uploads with drag-and-drop functionality.\n * Features include:\n * - Drag-and-drop file upload with visual feedback\n * - File type validation (audio files only)\n * - Upload progress tracking and status management\n * - Error handling with user-friendly toast notifications\n * - Click-to-upload fallback option\n *\n * The component manages upload state through React hooks and provides visual feedback\n * during the upload process. It validates file types client-side and handles server\n * communication through the apiRequest utility.\n */\ninterface UploadSectionProps {\n\t/** Callback function triggered when upload completes successfully with the new track ID */\n\tonUploadSuccess: (trackId: number) => void;\n}\n\nconst UploadSection: React.FC<UploadSectionProps> = ({ onUploadSuccess }) => {\n\t// State management for drag-and-drop visual feedback\n\tconst [isDragActive, setIsDragActive] = useState(false);\n\t// Upload progress state to show loading indicators\n\tconst [isUploading, setIsUploading] = useState(false);\n\t// Reference to hidden file input for click-to-upload functionality\n\tconst fileInputRef = useRef<HTMLInputElement>(null);\n\tconst { toast } = useToast();\n\n\t/**\n\t * Triggers the hidden file input when user clicks the upload area\n\t * Provides alternative to drag-and-drop for file selection\n\t */\n\tconst handleUploadClick = () => {\n\t\tif (fileInputRef.current) {\n\t\t\tfileInputRef.current.click();\n\t\t}\n\t};\n\n\t/**\n\t * Handles drag over events to provide visual feedback\n\t * Prevents default browser behavior and activates drag state\n\t */\n\tconst handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n\t\te.preventDefault();\n\t\tsetIsDragActive(true);\n\t};\n\n\t/**\n\t * Handles drag leave events to reset visual state\n\t * Deactivates drag state when user drags away from drop zone\n\t */\n\tconst handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n\t\te.preventDefault();\n\t\tsetIsDragActive(false);\n\t};\n\n\t/**\n\t * Handles file drop events and initiates upload process\n\t * Extracts the first file from the drop event and processes it\n\t */\n\tconst handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n\t\te.preventDefault();\n\t\tsetIsDragActive(false);\n\n\t\tif (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n\t\t\thandleFileUpload(e.dataTransfer.files[0]);\n\t\t}\n\t};\n\n\t/**\n\t * Handles file selection from the file input element\n\t * Triggered when user selects file through click-to-upload\n\t */\n\tconst handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tif (e.target.files && e.target.files.length > 0) {\n\t\t\thandleFileUpload(e.target.files[0]);\n\t\t}\n\t};\n\n\t/**\n\t * Core file upload handler with comprehensive validation and error handling\n\t *\n\t * This function:\n\t * 1. Validates file type against allowed audio formats\n\t * 2. Creates FormData for multipart upload\n\t * 3. Sends file to server via POST request\n\t * 4. Handles various error scenarios (file size, type, server errors)\n\t * 5. Provides user feedback through toast notifications\n\t * 6. Updates loading states during upload process\n\t *\n\t * @param file - The File object to upload (audio file)\n\t */\n\tconst handleFileUpload = async (file: File) => {\n\t\t// Client-side file type validation - only allow common audio formats\n\t\tconst allowedTypes = [\n\t\t\t\"audio/mpeg\", // MP3\n\t\t\t\"audio/wav\", // WAV\n\t\t\t\"audio/flac\", // FLAC\n\t\t\t\"audio/aiff\", // AIFF\n\t\t\t\"audio/x-aiff\", // Alternative AIFF MIME type\n\t\t];\n\n\t\tif (!allowedTypes.includes(file.type)) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"Invalid file type\",\n\t\t\t\tdescription: \"Please upload an MP3, WAV, FLAC, or AIFF file.\",\n\t\t\t\tvariant: \"destructive\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Set uploading state to show progress indicators\n\t\tsetIsUploading(true);\n\n\t\ttry {\n\t\t\t// Create FormData for multipart file upload\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append(\"audio\", file);\n\n\t\t\t// Send file to server upload endpoint\n\t\t\tconst response = await fetch(\"/api/tracks/upload\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: formData,\n\t\t\t});\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorData = await response.json();\n\n\t\t\t\t// Handle file size exceeded error (413 status)\n\t\t\t\tif (response.status === 413) {\n\t\t\t\t\t// Specific handling for file size exceeded (413 Payload Too Large)\n\t\t\t\t\ttoast({\n\t\t\t\t\t\ttitle: \"Upload failed\",\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\terrorData.message ||\n\t\t\t\t\t\t\t\"The uploaded file exceeds the maximum size limit.\",\n\t\t\t\t\t\tvariant: \"destructive\",\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Handle other server errors with descriptive messages\n\t\t\t\tthrow new Error(errorData.message || \"Upload failed\");\n\t\t\t}\n\n\t\t\t// Parse successful response and extract track data\n\t\t\tconst data = await response.json();\n\n\t\t\t// Show success notification to user\n\t\t\ttoast({\n\t\t\t\ttitle: \"Upload successful\",\n\t\t\t\tdescription: \"Your track has been uploaded successfully.\",\n\t\t\t});\n\n\t\t\t// Notify parent component of successful upload with track ID\n\t\t\tonUploadSuccess(data.id);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Upload error:\", error);\n\n\t\t\t// Show error notification with appropriate message\n\t\t\ttoast({\n\t\t\t\ttitle: \"Upload failed\",\n\t\t\t\tdescription:\n\t\t\t\t\t(error as Error).message ||\n\t\t\t\t\t\"An unexpected error occurred during upload.\",\n\t\t\t\tvariant: \"destructive\",\n\t\t\t});\n\t\t} finally {\n\t\t\t// Reset upload state and clear file input regardless of outcome\n\t\t\tsetIsUploading(false);\n\t\t\tif (fileInputRef.current) {\n\t\t\t\tfileInputRef.current.value = \"\";\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='bg-white rounded-xl shadow-md p-6'>\n\t\t\t<h2 className='text-xl font-semibold mb-4'>Upload Track</h2>\n\n\t\t\t{/* \n\t\t\t\tInteractive drop zone with comprehensive state management:\n\t\t\t\t- Visual feedback for drag states (active/inactive)\n\t\t\t\t- Disabled state during upload with opacity reduction\n\t\t\t\t- Click handler for fallback file selection\n\t\t\t\t- Drag event handlers for smooth drag-and-drop experience\n\t\t\t*/}\n\t\t\t<div\n\t\t\t\tclassName={`drop-zone p-8 flex flex-col items-center justify-center text-center cursor-pointer ${\n\t\t\t\t\tisDragActive ? \"active\" : \"\"\n\t\t\t\t} ${isUploading ? \"opacity-50 pointer-events-none\" : \"\"}`}\n\t\t\t\tonClick={handleUploadClick}\n\t\t\t\tonDragOver={handleDragOver}\n\t\t\t\tonDragLeave={handleDragLeave}\n\t\t\t\tonDrop={handleDrop}>\n\t\t\t\t{/* Conditional rendering based on upload state */}\n\t\t\t\t{isUploading ? (\n\t\t\t\t\t// Upload progress state with animated feedback\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='material-icons text-5xl text-primary-light mb-4 animate-pulse'>\n\t\t\t\t\t\t\tcloud_upload\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<p className='font-medium mb-2'>Uploading...</p>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t// Default upload prompt state with instructions\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='material-icons text-5xl text-primary-light mb-4'>\n\t\t\t\t\t\t\tcloud_upload\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<p className='font-medium mb-2'>Drag & drop your track here</p>\n\t\t\t\t\t\t<p className='text-sm text-gray-500 mb-4'>or click to browse</p>\n\t\t\t\t\t\t<p className='text-xs text-gray-400'>\n\t\t\t\t\t\t\tSupports MP3, WAV, FLAC, AIFF\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{/* \n\t\t\t\t\tHidden file input for click-to-upload functionality\n\t\t\t\t\t- Accepts multiple audio file formats through MIME types and extensions\n\t\t\t\t\t- Disabled during upload to prevent multiple simultaneous uploads\n\t\t\t\t\t- Value cleared after each upload to allow re-uploading same file\n\t\t\t\t*/}\n\t\t\t\t<input\n\t\t\t\t\ttype='file'\n\t\t\t\t\tid='file-upload'\n\t\t\t\t\tclassName='hidden'\n\t\t\t\t\taccept='.mp3,.wav,.flac,.aiff,audio/mpeg,audio/wav,audio/flac,audio/aiff,audio/x-aiff'\n\t\t\t\t\tref={fileInputRef}\n\t\t\t\t\tonChange={handleFileChange}\n\t\t\t\t\tdisabled={isUploading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UploadSection;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\VersionPlayer.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'updateTime' is assigned a value but never used.","line":23,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":20}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @format */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { AudioTrack } from \"@shared/schema\";\nimport { formatDuration } from \"@/lib/audio\";\n\ninterface VersionPlayerProps {\n\ttrack: AudioTrack;\n\tversion: number;\n}\n\nconst VersionPlayer: React.FC<VersionPlayerProps> = ({ track, version }) => {\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [currentTime, setCurrentTime] = useState(0);\n\tconst [duration, setDuration] = useState(0);\n\tconst audioRef = useRef<HTMLAudioElement>(null);\n\tconst progressIntervalRef = useRef<number>();\n\n\tuseEffect(() => {\n\t\tif (audioRef.current) {\n\t\t\tconst audio = audioRef.current;\n\n\t\t\tconst updateTime = () => {\n\t\t\t\tsetCurrentTime(audio.currentTime);\n\t\t\t};\n\n\t\t\tconst onLoadedMetadata = () => {\n\t\t\t\tsetDuration(audio.duration);\n\t\t\t};\n\n\t\t\tconst onEnded = () => {\n\t\t\t\tsetIsPlaying(false);\n\t\t\t\tsetCurrentTime(0);\n\t\t\t\tclearInterval(progressIntervalRef.current);\n\t\t\t};\n\n\t\t\taudio.addEventListener(\"loadedmetadata\", onLoadedMetadata);\n\t\t\taudio.addEventListener(\"ended\", onEnded);\n\n\t\t\treturn () => {\n\t\t\t\taudio.removeEventListener(\"loadedmetadata\", onLoadedMetadata);\n\t\t\t\taudio.removeEventListener(\"ended\", onEnded);\n\t\t\t\tclearInterval(progressIntervalRef.current);\n\t\t\t};\n\t\t}\n\t}, []);\n\n\tconst togglePlayPause = () => {\n\t\tif (!audioRef.current) return;\n\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.pause();\n\t\t\tclearInterval(progressIntervalRef.current);\n\t\t\tsetIsPlaying(false);\n\t\t} else {\n\t\t\taudioRef.current.play();\n\t\t\tprogressIntervalRef.current = window.setInterval(() => {\n\t\t\t\tif (audioRef.current) {\n\t\t\t\t\tsetCurrentTime(audioRef.current.currentTime);\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t\tsetIsPlaying(true);\n\t\t}\n\t};\n\n\tconst handleSkipBack = () => {\n\t\tif (!audioRef.current) return;\n\t\taudioRef.current.currentTime = Math.max(\n\t\t\t0,\n\t\t\taudioRef.current.currentTime - 10\n\t\t);\n\t\tsetCurrentTime(audioRef.current.currentTime);\n\t};\n\n\tconst handleSkipForward = () => {\n\t\tif (!audioRef.current) return;\n\t\taudioRef.current.currentTime = Math.min(\n\t\t\taudioRef.current.duration,\n\t\t\taudioRef.current.currentTime + 10\n\t\t);\n\t\tsetCurrentTime(audioRef.current.currentTime);\n\t};\n\n\treturn (\n\t\t<div className='bg-gray-50 rounded-lg p-4 mb-4'>\n\t\t\t<div className='flex justify-between items-center mb-4'>\n\t\t\t\t<div className='text-lg font-medium'>Version {version + 1}</div>\n\t\t\t\t<a\n\t\t\t\t\thref={`/api/tracks/${track.id}/download?version=${version}`}\n\t\t\t\t\tclassName='inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary'\n\t\t\t\t\tdownload>\n\t\t\t\t\t<span className='material-icons text-sm mr-1 mt-1'>download</span>\n\t\t\t\t\tDownload\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t\t<div className='waveform-container bg-gray-900 rounded-lg'>\n\t\t\t\t<div className='waveform'>\n\t\t\t\t\t<div className='waveform-bars flex items-center h-full p-4'>\n\t\t\t\t\t\t{Array(150)\n\t\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t\t.map((_, i) => {\n\t\t\t\t\t\t\t\tconst originalLength = track.duration || 0;\n\t\t\t\t\t\t\t\tconst extendedLength =\n\t\t\t\t\t\t\t\t\ttrack.extendedDurations?.[version] ||\n\t\t\t\t\t\t\t\t\ttrack.extendedDuration ||\n\t\t\t\t\t\t\t\t\tduration;\n\t\t\t\t\t\t\t\tconst introLength = Math.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\textendedLength - originalLength\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst introSection = (introLength / extendedLength) * 150;\n\n\t\t\t\t\t\t\t\tconst isIntroSection = i <= introSection;\n\t\t\t\t\t\t\t\tconst isCurrentlyPlaying = i / 150 <= currentTime / duration;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tkey={`version-${version}-waveform-${i}`}\n\t\t\t\t\t\t\t\t\t\tclassName='waveform-bar transition-colors duration-300'\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\theight: `${Math.floor(Math.random() * 70 + 10)}px`,\n\t\t\t\t\t\t\t\t\t\t\twidth: \"3px\",\n\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 1px\",\n\t\t\t\t\t\t\t\t\t\t\tbackground: isCurrentlyPlaying\n\t\t\t\t\t\t\t\t\t\t\t\t? isIntroSection\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"linear-gradient(to top, #10b981, #34d399)\" // Playing intro (green)\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"linear-gradient(to top, #7c3aed, #a78bfa)\" // Playing main (purple)\n\t\t\t\t\t\t\t\t\t\t\t\t: isIntroSection\n\t\t\t\t\t\t\t\t\t\t\t\t? \"linear-gradient(to top, #064e3b, #065f46)\" // Unplayed intro (dark green)\n\t\t\t\t\t\t\t\t\t\t\t\t: \"linear-gradient(to top, #4c1d95, #5b21b6)\", // Unplayed main (dark purple)\n\t\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclassName='player-progress mt-2 mb-2 h-2 bg-gray-200 rounded-full overflow-hidden cursor-pointer'\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tif (!audioRef.current) return;\n\t\t\t\t\tconst rect = e.currentTarget.getBoundingClientRect();\n\t\t\t\t\tconst pos = (e.clientX - rect.left) / rect.width;\n\t\t\t\t\tconst newTime = pos * duration;\n\t\t\t\t\taudioRef.current.currentTime = newTime;\n\t\t\t\t\tsetCurrentTime(newTime);\n\t\t\t\t}}>\n\t\t\t\t<div\n\t\t\t\t\tclassName='h-full bg-gradient-to-r from-purple-600 to-purple-400 transition-all duration-300'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: `${(currentTime / (duration || 1)) * 100}%`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='player-controls flex items-center'>\n\t\t\t\t<button\n\t\t\t\t\tclassName='p-2 rounded-full hover:bg-gray-200'\n\t\t\t\t\tonClick={handleSkipBack}>\n\t\t\t\t\t<span className='material-icons'>skip_previous</span>\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName='p-2 rounded-full hover:bg-gray-200'\n\t\t\t\t\tonClick={togglePlayPause}>\n\t\t\t\t\t<span className='material-icons'>\n\t\t\t\t\t\t{isPlaying ? \"pause\" : \"play_arrow\"}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName='p-2 rounded-full hover:bg-gray-200'\n\t\t\t\t\tonClick={handleSkipForward}>\n\t\t\t\t\t<span className='material-icons'>skip_next</span>\n\t\t\t\t</button>\n\t\t\t\t<span className='text-sm text-gray-500 ml-2 -mt-2'>\n\t\t\t\t\t{formatDuration(currentTime)} / {formatDuration(duration)}\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t<audio\n\t\t\t\tref={audioRef}\n\t\t\t\tsrc={`/api/audio/${track.id}/extended?version=${version}`}\n\t\t\t\tpreload='metadata'\n\t\t\t\tonLoadedMetadata={(e) =>\n\t\t\t\t\tsetDuration((e.target as HTMLAudioElement).duration)\n\t\t\t\t}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default VersionPlayer;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\alert-dialog.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":69,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[99,99],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[133,133],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":56,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[189,189],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":46,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[236,236],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":56,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[293,293],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":11,"column":54,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":12,"endColumn":1,"fix":{"range":[348,348],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":25,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":26,"endColumn":1,"fix":{"range":[831,831],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":74,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[905,905],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":43,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":44,"endColumn":1,"fix":{"range":[1832,1832],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":44,"column":74,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":45,"endColumn":1,"fix":{"range":[1906,1906],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":57,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":58,"endColumn":1,"fix":{"range":[2135,2135],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":58,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":59,"endColumn":1,"fix":{"range":[2187,2187],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":71,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":72,"endColumn":1,"fix":{"range":[2429,2429],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":72,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":73,"endColumn":1,"fix":{"range":[2481,2481],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":83,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":84,"endColumn":1,"fix":{"range":[2808,2808],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":84,"column":70,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":85,"endColumn":1,"fix":{"range":[2878,2878],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":95,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":96,"endColumn":1,"fix":{"range":[3237,3237],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":97,"column":47,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":98,"endColumn":1,"fix":{"range":[3321,3321],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":108,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":109,"endColumn":1,"fix":{"range":[3645,3645],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":109,"column":72,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":110,"endColumn":1,"fix":{"range":[3717,3717],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":124,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":125,"endColumn":1,"fix":{"range":[4103,4103],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":125,"column":72,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":126,"endColumn":1,"fix":{"range":[4175,4175],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":139,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":140,"endColumn":1,"fix":{"range":[4419,4419],"text":";"}}],"suppressedMessages":[],"errorCount":24,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":24,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\alert.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[96,96],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[130,130],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":20,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":21,"endColumn":1,"fix":{"range":[604,604],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":32,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":33,"endColumn":1,"fix":{"range":[897,897],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":33,"column":28,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":34,"endColumn":1,"fix":{"range":[925,925],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":44,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":45,"endColumn":1,"fix":{"range":[1189,1189],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":45,"column":38,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":46,"endColumn":1,"fix":{"range":[1227,1227],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":56,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":57,"endColumn":1,"fix":{"range":[1485,1485],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":57,"column":50,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":58,"endColumn":1,"fix":{"range":[1535,1535],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":59,"column":47,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":60,"endColumn":1,"fix":{"range":[1583,1583],"text":";"}}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":11,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\badge.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[96,96],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[130,130],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[817,817],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":33,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":34,"endColumn":1,"fix":{"range":[1092,1092],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":36,"column":32,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":37,"endColumn":1,"fix":{"range":[1127,1127],"text":";"}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\button.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":44,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[74,74],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[140,140],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[174,174],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":34,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":35,"endColumn":1,"fix":{"range":[1353,1353],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":44,"column":43,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":45,"endColumn":1,"fix":{"range":[1683,1683],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":51,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":52,"endColumn":1,"fix":{"range":[1829,1829],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":53,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":54,"endColumn":1,"fix":{"range":[1835,1835],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":54,"column":30,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":55,"endColumn":1,"fix":{"range":[1865,1865],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":56,"column":34,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":57,"endColumn":1,"fix":{"range":[1900,1900],"text":";"}}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":10,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\calendar.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":57,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[87,87],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":45,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[132,132],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[166,166],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":56,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[222,222],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":64,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":65,"endColumn":1,"fix":{"range":[2637,2637],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":34,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[2673,2673],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":68,"column":20,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":69,"endColumn":1,"fix":{"range":[2694,2694],"text":";"}}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\card.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[64,64],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":17,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":18,"endColumn":1,"fix":{"range":[343,343],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":18,"column":26,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":19,"endColumn":1,"fix":{"range":[369,369],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":29,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":30,"endColumn":1,"fix":{"range":[609,609],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":30,"column":38,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":31,"endColumn":1,"fix":{"range":[647,647],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":44,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":45,"endColumn":1,"fix":{"range":[925,925],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":45,"column":36,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":46,"endColumn":1,"fix":{"range":[961,961],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":56,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":57,"endColumn":1,"fix":{"range":[1206,1206],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":57,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":58,"endColumn":1,"fix":{"range":[1254,1254],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":64,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":65,"endColumn":1,"fix":{"range":[1460,1460],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":65,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":66,"endColumn":1,"fix":{"range":[1500,1500],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":76,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":77,"endColumn":1,"fix":{"range":[1737,1737],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":77,"column":38,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":78,"endColumn":1,"fix":{"range":[1775,1775],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":79,"column":81,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":80,"endColumn":1,"fix":{"range":[1857,1857],"text":";"}}],"suppressedMessages":[],"errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":15,"fixableWarningCount":0,"source":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\carousel.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":30,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[116,116],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":53,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[169,169],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[203,203],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":48,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[251,251],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":31,"column":79,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":32,"endColumn":1,"fix":{"range":[942,942],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":34,"column":52,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":35,"endColumn":1,"fix":{"range":[1020,1020],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":37,"column":70,"nodeType":"ThrowStatement","messageId":"missingSemi","endLine":38,"endColumn":1,"fix":{"range":[1109,1109],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":40,"column":17,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":41,"endColumn":1,"fix":{"range":[1131,1131],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":65,"column":6,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":66,"endColumn":1,"fix":{"range":[1561,1561],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":68,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[1629,1629],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":67,"column":68,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":68,"endColumn":1,"fix":{"range":[1697,1697],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":71,"column":15,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":72,"endColumn":1,"fix":{"range":[1794,1794],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":74,"column":44,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":75,"endColumn":1,"fix":{"range":[1847,1847],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":75,"column":44,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":76,"endColumn":1,"fix":{"range":[1891,1891],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":76,"column":11,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":77,"endColumn":1,"fix":{"range":[1902,1902],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":79,"column":24,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":80,"endColumn":1,"fix":{"range":[1976,1976],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":80,"column":14,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":81,"endColumn":1,"fix":{"range":[1990,1990],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":83,"column":24,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":84,"endColumn":1,"fix":{"range":[2064,2064],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":84,"column":14,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":85,"endColumn":1,"fix":{"range":[2078,2078],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":89,"column":33,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":90,"endColumn":1,"fix":{"range":[2254,2254],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":90,"column":23,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":91,"endColumn":1,"fix":{"range":[2277,2277],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":92,"column":33,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":93,"endColumn":1,"fix":{"range":[2359,2359],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":93,"column":23,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":94,"endColumn":1,"fix":{"range":[2382,2382],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":97,"column":6,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":98,"endColumn":1,"fix":{"range":[2438,2438],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":101,"column":15,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":102,"endColumn":1,"fix":{"range":[2511,2511],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":104,"column":18,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":105,"endColumn":1,"fix":{"range":[2538,2538],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":105,"column":22,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":106,"endColumn":1,"fix":{"range":[2560,2560],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":109,"column":15,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":110,"endColumn":1,"fix":{"range":[2622,2622],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":112,"column":20,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":113,"endColumn":1,"fix":{"range":[2651,2651],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":113,"column":33,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":114,"endColumn":1,"fix":{"range":[2684,2684],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":114,"column":33,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":115,"endColumn":1,"fix":{"range":[2717,2717],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":117,"column":37,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":118,"endColumn":1,"fix":{"range":[2776,2776],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":118,"column":8,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":119,"endColumn":1,"fix":{"range":[2784,2784],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":119,"column":24,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":120,"endColumn":1,"fix":{"range":[2808,2808],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":146,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":147,"endColumn":1,"fix":{"range":[3440,3440],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":148,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":149,"endColumn":1,"fix":{"range":[3446,3446],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":149,"column":34,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":150,"endColumn":1,"fix":{"range":[3480,3480],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":155,"column":53,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":156,"endColumn":1,"fix":{"range":[3671,3671],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":169,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":170,"endColumn":1,"fix":{"range":[3952,3952],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":170,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":171,"endColumn":1,"fix":{"range":[3955,3955],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":171,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":172,"endColumn":1,"fix":{"range":[4003,4003],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":177,"column":40,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":178,"endColumn":1,"fix":{"range":[4178,4178],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":191,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":192,"endColumn":1,"fix":{"range":[4447,4447],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":192,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":193,"endColumn":1,"fix":{"range":[4450,4450],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":193,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":194,"endColumn":1,"fix":{"range":[4492,4492],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":199,"column":67,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":200,"endColumn":1,"fix":{"range":[4736,4736],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":220,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":221,"endColumn":1,"fix":{"range":[5246,5246],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":221,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":222,"endColumn":1,"fix":{"range":[5249,5249],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":222,"column":50,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":223,"endColumn":1,"fix":{"range":[5299,5299],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":228,"column":67,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":229,"endColumn":1,"fix":{"range":[5539,5539],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":249,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":250,"endColumn":1,"fix":{"range":[6049,6049],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":250,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":251,"endColumn":1,"fix":{"range":[6052,6052],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":251,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":252,"endColumn":1,"fix":{"range":[6094,6094],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":260,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":261,"endColumn":1,"fix":{"range":[6209,6209],"text":";"}}],"suppressedMessages":[],"errorCount":55,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":55,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\chart.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":46,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[90,90],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[124,124],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":53,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[218,218],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":25,"column":73,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":26,"endColumn":1,"fix":{"range":[573,573],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":28,"column":49,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":29,"endColumn":1,"fix":{"range":[645,645],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":31,"column":73,"nodeType":"ThrowStatement","messageId":"missingSemi","endLine":32,"endColumn":1,"fix":{"range":[737,737],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":34,"column":17,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":35,"endColumn":1,"fix":{"range":[759,759],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":46,"column":33,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":47,"endColumn":1,"fix":{"range":[1081,1081],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":47,"column":62,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":48,"endColumn":1,"fix":{"range":[1143,1143],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[2232,2232],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":67,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":68,"endColumn":1,"fix":{"range":[2235,2235],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":68,"column":37,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":69,"endColumn":1,"fix":{"range":[2272,2272],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":73,"column":4,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":74,"endColumn":1,"fix":{"range":[2457,2457],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":76,"column":16,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":77,"endColumn":1,"fix":{"range":[2503,2503],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":90,"column":23,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":91,"endColumn":1,"fix":{"range":[2839,2839],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":91,"column":56,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":92,"endColumn":1,"fix":{"range":[2895,2895],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":100,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":101,"endColumn":1,"fix":{"range":[2974,2974],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":101,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":102,"endColumn":1,"fix":{"range":[2976,2976],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":103,"column":47,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":104,"endColumn":1,"fix":{"range":[3024,3024],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":134,"column":34,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":135,"endColumn":1,"fix":{"range":[3651,3651],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":138,"column":20,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":139,"endColumn":1,"fix":{"range":[3762,3762],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":141,"column":29,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":142,"endColumn":1,"fix":{"range":[3800,3800],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":142,"column":74,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":143,"endColumn":1,"fix":{"range":[3874,3874],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":143,"column":72,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":144,"endColumn":1,"fix":{"range":[3946,3946],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":147,"column":30,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":148,"endColumn":1,"fix":{"range":[4108,4108],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":154,"column":10,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":155,"endColumn":1,"fix":{"range":[4288,4288],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":158,"column":20,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":159,"endColumn":1,"fix":{"range":[4337,4337],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":161,"column":78,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":162,"endColumn":1,"fix":{"range":[4424,4424],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":170,"column":7,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":171,"endColumn":1,"fix":{"range":[4559,4559],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":173,"column":18,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":174,"endColumn":1,"fix":{"range":[4617,4617],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":176,"column":66,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":177,"endColumn":1,"fix":{"range":[4690,4690],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":189,"column":77,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":190,"endColumn":1,"fix":{"range":[5128,5128],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":190,"column":78,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":191,"endColumn":1,"fix":{"range":[5206,5206],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":191,"column":76,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":192,"endColumn":1,"fix":{"range":[5282,5282],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":250,"column":14,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":251,"endColumn":1,"fix":{"range":[7769,7769],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":254,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":255,"endColumn":1,"fix":{"range":[7817,7817],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":256,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":257,"endColumn":1,"fix":{"range":[7823,7823],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":257,"column":49,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":258,"endColumn":1,"fix":{"range":[7872,7872],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":259,"column":45,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":260,"endColumn":1,"fix":{"range":[7918,7918],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":273,"column":34,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":274,"endColumn":1,"fix":{"range":[8280,8280],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":276,"column":18,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":277,"endColumn":1,"fix":{"range":[8327,8327],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":289,"column":62,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":290,"endColumn":1,"fix":{"range":[8638,8638],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":290,"column":76,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":291,"endColumn":1,"fix":{"range":[8714,8714],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":311,"column":12,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":312,"endColumn":1,"fix":{"range":[9325,9325],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":314,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":315,"endColumn":1,"fix":{"range":[9356,9356],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":316,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":317,"endColumn":1,"fix":{"range":[9362,9362],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":317,"column":47,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":318,"endColumn":1,"fix":{"range":[9409,9409],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":326,"column":21,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":327,"endColumn":1,"fix":{"range":[9636,9636],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":334,"column":18,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":335,"endColumn":1,"fix":{"range":[9808,9808],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":336,"column":35,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":337,"endColumn":1,"fix":{"range":[9844,9844],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":342,"column":68,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":343,"endColumn":1,"fix":{"range":[10009,10009],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":350,"column":16,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":351,"endColumn":1,"fix":{"range":[10249,10249],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":355,"column":41,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":356,"endColumn":1,"fix":{"range":[10358,10358],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":365,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":366,"endColumn":1,"fix":{"range":[10480,10480],"text":";"}}],"suppressedMessages":[],"errorCount":56,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":56,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\command.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":58,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[88,88],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":51,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[139,139],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":38,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[177,177],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[211,211],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":63,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[274,274],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":21,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":22,"endColumn":1,"fix":{"range":[648,648],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":22,"column":51,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":23,"endColumn":1,"fix":{"range":[699,699],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":33,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":34,"endColumn":1,"fix":{"range":[1339,1339],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":34,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":35,"endColumn":1,"fix":{"range":[1341,1341],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":51,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":52,"endColumn":1,"fix":{"range":[1958,1958],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":53,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":54,"endColumn":1,"fix":{"range":[2021,2021],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":64,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":65,"endColumn":1,"fix":{"range":[2354,2354],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[2415,2415],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":77,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":78,"endColumn":1,"fix":{"range":[2694,2694],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":79,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":80,"endColumn":1,"fix":{"range":[2757,2757],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":93,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":94,"endColumn":1,"fix":{"range":[3279,3279],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":95,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":96,"endColumn":1,"fix":{"range":[3342,3342],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":106,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":107,"endColumn":1,"fix":{"range":[3668,3668],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":107,"column":70,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":108,"endColumn":1,"fix":{"range":[3738,3738],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":121,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":122,"endColumn":1,"fix":{"range":[4355,4355],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":123,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":124,"endColumn":1,"fix":{"range":[4416,4416],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":137,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":138,"endColumn":1,"fix":{"range":[4677,4677],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":138,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":139,"endColumn":1,"fix":{"range":[4679,4679],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":139,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":140,"endColumn":1,"fix":{"range":[4727,4727],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":151,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":152,"endColumn":1,"fix":{"range":[4884,4884],"text":";"}}],"suppressedMessages":[],"errorCount":26,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":26,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\dialog.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":58,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[102,102],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[135,135],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[169,169],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":36,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[206,206],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":11,"column":46,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":12,"endColumn":1,"fix":{"range":[253,253],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":13,"column":44,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":14,"endColumn":1,"fix":{"range":[298,298],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":42,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[341,341],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":29,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":30,"endColumn":1,"fix":{"range":[803,803],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":30,"column":64,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":31,"endColumn":1,"fix":{"range":[867,867],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":53,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":54,"endColumn":1,"fix":{"range":[2240,2240],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":54,"column":64,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":55,"endColumn":1,"fix":{"range":[2304,2304],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":67,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":68,"endColumn":1,"fix":{"range":[2530,2530],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":68,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":69,"endColumn":1,"fix":{"range":[2572,2572],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":81,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":82,"endColumn":1,"fix":{"range":[2809,2809],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":82,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":83,"endColumn":1,"fix":{"range":[2851,2851],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":96,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":97,"endColumn":1,"fix":{"range":[3204,3204],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":97,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":98,"endColumn":1,"fix":{"range":[3264,3264],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":108,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":109,"endColumn":1,"fix":{"range":[3603,3603],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":109,"column":72,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":110,"endColumn":1,"fix":{"range":[3675,3675],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":122,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":123,"endColumn":1,"fix":{"range":[3847,3847],"text":";"}}],"suppressedMessages":[],"errorCount":22,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":22,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\dropdown-menu.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":71,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[101,101],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":59,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[160,160],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[194,194],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":48,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[243,243],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":58,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[302,302],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":11,"column":54,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":12,"endColumn":1,"fix":{"range":[357,357],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":13,"column":56,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":14,"endColumn":1,"fix":{"range":[414,414],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":50,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[465,465],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":17,"column":64,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":18,"endColumn":1,"fix":{"range":[530,530],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":37,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":38,"endColumn":1,"fix":{"range":[1237,1237],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":39,"column":47,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":40,"endColumn":1,"fix":{"range":[1321,1321],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":53,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":54,"endColumn":1,"fix":{"range":[2162,2162],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":55,"column":47,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":56,"endColumn":1,"fix":{"range":[2246,2246],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":72,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":73,"endColumn":1,"fix":{"range":[3282,3282],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":73,"column":76,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":74,"endColumn":1,"fix":{"range":[3358,3358],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":90,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":91,"endColumn":1,"fix":{"range":[4029,4029],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":91,"column":70,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":92,"endColumn":1,"fix":{"range":[4099,4099],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":113,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":114,"endColumn":1,"fix":{"range":[5001,5001],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":115,"column":49,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":116,"endColumn":1,"fix":{"range":[5089,5089],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":136,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":137,"endColumn":1,"fix":{"range":[5959,5959],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":137,"column":80,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":138,"endColumn":1,"fix":{"range":[6039,6039],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":154,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":155,"endColumn":1,"fix":{"range":[6458,6458],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":155,"column":72,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":156,"endColumn":1,"fix":{"range":[6530,6530],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":166,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":167,"endColumn":1,"fix":{"range":[6880,6880],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":167,"column":80,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":168,"endColumn":1,"fix":{"range":[6960,6960],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":178,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":179,"endColumn":1,"fix":{"range":[7191,7191],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":179,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":180,"endColumn":1,"fix":{"range":[7193,7193],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":180,"column":58,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":181,"endColumn":1,"fix":{"range":[7251,7251],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":198,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":199,"endColumn":1,"fix":{"range":[7608,7608],"text":";"}}],"suppressedMessages":[],"errorCount":30,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":30,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\form.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":56,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[100,100],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":44,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[144,144],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":13,"column":25,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":14,"endColumn":1,"fix":{"range":[288,288],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[322,322],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":16,"column":46,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":17,"endColumn":1,"fix":{"range":[368,368],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":18,"column":26,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":19,"endColumn":1,"fix":{"range":[395,395],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":29,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":30,"endColumn":1,"fix":{"range":[664,664],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":41,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":42,"endColumn":1,"fix":{"range":[1003,1003],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":42,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":43,"endColumn":1,"fix":{"range":[1005,1005],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":45,"column":58,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":46,"endColumn":1,"fix":{"range":[1093,1093],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":46,"column":56,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":47,"endColumn":1,"fix":{"range":[1149,1149],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":47,"column":56,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":48,"endColumn":1,"fix":{"range":[1205,1205],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":49,"column":65,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":50,"endColumn":1,"fix":{"range":[1271,1271],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":52,"column":70,"nodeType":"ThrowStatement","messageId":"missingSemi","endLine":53,"endColumn":1,"fix":{"range":[1365,1365],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":55,"column":29,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":56,"endColumn":1,"fix":{"range":[1399,1399],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":64,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":65,"endColumn":1,"fix":{"range":[1606,1606],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":65,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":66,"endColumn":1,"fix":{"range":[1608,1608],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":73,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":74,"endColumn":1,"fix":{"range":[1753,1753],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":79,"column":27,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":80,"endColumn":1,"fix":{"range":[1911,1911],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":85,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":86,"endColumn":1,"fix":{"range":[2079,2079],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":86,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":87,"endColumn":1,"fix":{"range":[2082,2082],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":87,"column":34,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":88,"endColumn":1,"fix":{"range":[2116,2116],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":93,"column":47,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":94,"endColumn":1,"fix":{"range":[2347,2347],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":102,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":103,"endColumn":1,"fix":{"range":[2502,2502],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":103,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":104,"endColumn":1,"fix":{"range":[2505,2505],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":104,"column":36,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":105,"endColumn":1,"fix":{"range":[2541,2541],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":110,"column":81,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":111,"endColumn":1,"fix":{"range":[2767,2767],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":124,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":125,"endColumn":1,"fix":{"range":[3026,3026],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":125,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":126,"endColumn":1,"fix":{"range":[3029,3029],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":126,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":127,"endColumn":1,"fix":{"range":[3069,3069],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":132,"column":47,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":133,"endColumn":1,"fix":{"range":[3266,3266],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":141,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":142,"endColumn":1,"fix":{"range":[3423,3423],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":142,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":143,"endColumn":1,"fix":{"range":[3426,3426],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":143,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":144,"endColumn":1,"fix":{"range":[3474,3474],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":149,"column":50,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":150,"endColumn":1,"fix":{"range":[3680,3680],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":150,"column":63,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":151,"endColumn":1,"fix":{"range":[3743,3743],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":153,"column":16,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":154,"endColumn":1,"fix":{"range":[3775,3775],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":165,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":166,"endColumn":1,"fix":{"range":[3960,3960],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":166,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":167,"endColumn":1,"fix":{"range":[3963,3963],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":167,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":168,"endColumn":1,"fix":{"range":[4003,4003],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":178,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":179,"endColumn":1,"fix":{"range":[4126,4126],"text":";"}}],"suppressedMessages":[],"errorCount":43,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":43,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={Boolean(error)}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\icons.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\input.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[64,64],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":17,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":18,"endColumn":1,"fix":{"range":[738,738],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":19,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":20,"endColumn":1,"fix":{"range":[744,744],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":20,"column":28,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":21,"endColumn":1,"fix":{"range":[772,772],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":22,"column":17,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":23,"endColumn":1,"fix":{"range":[790,790],"text":";"}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\label.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":56,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[86,86],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[152,152],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[186,186],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[311,311],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":21,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":22,"endColumn":1,"fix":{"range":[639,639],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":22,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":23,"endColumn":1,"fix":{"range":[691,691],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":17,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[709,709],"text":";"}}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\menubar.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":60,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[104,104],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":59,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[163,163],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[197,197],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":46,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[335,335],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":18,"column":47,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":19,"endColumn":1,"fix":{"range":[478,478],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":48,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[624,624],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":30,"column":52,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":31,"endColumn":1,"fix":{"range":[782,782],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":36,"column":69,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":37,"endColumn":1,"fix":{"range":[943,943],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":51,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":52,"endColumn":1,"fix":{"range":[1313,1313],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":52,"column":56,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":53,"endColumn":1,"fix":{"range":[1369,1369],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[1899,1899],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":67,"column":66,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":68,"endColumn":1,"fix":{"range":[1965,1965],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":87,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":88,"endColumn":1,"fix":{"range":[2659,2659],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":88,"column":72,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":89,"endColumn":1,"fix":{"range":[2731,2731],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":102,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":103,"endColumn":1,"fix":{"range":[3536,3536],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":103,"column":72,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":104,"endColumn":1,"fix":{"range":[3608,3608],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":127,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":128,"endColumn":1,"fix":{"range":[4630,4630],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":128,"column":66,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":129,"endColumn":1,"fix":{"range":[4696,4696],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":145,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":146,"endColumn":1,"fix":{"range":[5263,5263],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":146,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":147,"endColumn":1,"fix":{"range":[5323,5323],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":168,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":169,"endColumn":1,"fix":{"range":[6172,6172],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":169,"column":76,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":170,"endColumn":1,"fix":{"range":[6248,6248],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":190,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":191,"endColumn":1,"fix":{"range":[7065,7065],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":191,"column":70,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":192,"endColumn":1,"fix":{"range":[7135,7135],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":208,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":209,"endColumn":1,"fix":{"range":[7534,7534],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":209,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":210,"endColumn":1,"fix":{"range":[7596,7596],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":220,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":221,"endColumn":1,"fix":{"range":[7926,7926],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":221,"column":70,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":222,"endColumn":1,"fix":{"range":[7996,7996],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":235,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":236,"endColumn":1,"fix":{"range":[8257,8257],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":236,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":237,"endColumn":1,"fix":{"range":[8259,8259],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":237,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":238,"endColumn":1,"fix":{"range":[8307,8307],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":256,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":257,"endColumn":1,"fix":{"range":[8604,8604],"text":";"}}],"suppressedMessages":[],"errorCount":34,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":34,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\pagination.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":73,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[103,103],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[137,137],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":69,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[206,206],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":14,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":15,"endColumn":1,"fix":{"range":[433,433],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":38,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[471,471],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[712,712],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[764,764],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":34,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":35,"endColumn":1,"fix":{"range":[953,953],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":35,"column":46,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":36,"endColumn":1,"fix":{"range":[999,999],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":59,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":60,"endColumn":1,"fix":{"range":[1433,1433],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":60,"column":46,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":61,"endColumn":1,"fix":{"range":[1479,1479],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":75,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":76,"endColumn":1,"fix":{"range":[1814,1814],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":76,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":77,"endColumn":1,"fix":{"range":[1868,1868],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":91,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":92,"endColumn":1,"fix":{"range":[2192,2192],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":92,"column":46,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":93,"endColumn":1,"fix":{"range":[2238,2238],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":106,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":107,"endColumn":1,"fix":{"range":[2551,2551],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":107,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":108,"endColumn":1,"fix":{"range":[2605,2605],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":117,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":118,"endColumn":1,"fix":{"range":[2750,2750],"text":";"}}],"suppressedMessages":[],"errorCount":19,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":19,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\popover.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":60,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[90,90],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[124,124],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":38,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[163,163],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":48,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[212,212],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[1161,1161],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":66,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[1227,1227],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":29,"column":51,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":30,"endColumn":1,"fix":{"range":[1279,1279],"text":";"}}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\progress.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":62,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[106,106],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[140,140],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":25,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":26,"endColumn":1,"fix":{"range":[711,711],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":58,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[769,769],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":28,"column":20,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":29,"endColumn":1,"fix":{"range":[790,790],"text":";"}}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\scroll-area.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":67,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[97,97],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[131,131],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":21,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":22,"endColumn":1,"fix":{"range":[673,673],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":22,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":23,"endColumn":1,"fix":{"range":[735,735],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":43,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":44,"endColumn":1,"fix":{"range":[1531,1531],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":44,"column":76,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":45,"endColumn":1,"fix":{"range":[1607,1607],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":46,"column":33,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":47,"endColumn":1,"fix":{"range":[1641,1641],"text":";"}}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\select.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":58,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[102,102],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":61,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[163,163],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[197,197],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":36,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[234,234],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":11,"column":42,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":12,"endColumn":1,"fix":{"range":[277,277],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":13,"column":42,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":14,"endColumn":1,"fix":{"range":[320,320],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":32,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":33,"endColumn":1,"fix":{"range":[1111,1111],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":33,"column":64,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":34,"endColumn":1,"fix":{"range":[1175,1175],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":49,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":50,"endColumn":1,"fix":{"range":[1640,1640],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":50,"column":78,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":51,"endColumn":1,"fix":{"range":[1718,1718],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[2195,2195],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":68,"column":47,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":69,"endColumn":1,"fix":{"range":[2279,2279],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":99,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":100,"endColumn":1,"fix":{"range":[3825,3825],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":100,"column":64,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":101,"endColumn":1,"fix":{"range":[3889,3889],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":111,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":112,"endColumn":1,"fix":{"range":[4213,4213],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":112,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":113,"endColumn":1,"fix":{"range":[4273,4273],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":134,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":135,"endColumn":1,"fix":{"range":[5105,5105],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":135,"column":58,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":136,"endColumn":1,"fix":{"range":[5163,5163],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":146,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":147,"endColumn":1,"fix":{"range":[5489,5489],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":147,"column":68,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":148,"endColumn":1,"fix":{"range":[5557,5557],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":160,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":161,"endColumn":1,"fix":{"range":[5741,5741],"text":";"}}],"suppressedMessages":[],"errorCount":23,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":23,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\separator.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":64,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[94,94],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[128,128],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[673,673],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[733,733],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":29,"column":21,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":30,"endColumn":1,"fix":{"range":[755,755],"text":";"}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\sheet.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":57,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[101,101],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[167,167],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[200,200],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[234,234],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":10,"column":34,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":11,"endColumn":1,"fix":{"range":[269,269],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":44,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[314,314],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":14,"column":40,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":15,"endColumn":1,"fix":{"range":[355,355],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":16,"column":42,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":17,"endColumn":1,"fix":{"range":[398,398],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":30,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":31,"endColumn":1,"fix":{"range":[857,857],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":31,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":32,"endColumn":1,"fix":{"range":[919,919],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":50,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":51,"endColumn":1,"fix":{"range":[1803,1803],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":74,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":75,"endColumn":1,"fix":{"range":[2735,2735],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":75,"column":62,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":76,"endColumn":1,"fix":{"range":[2797,2797],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":88,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":89,"endColumn":1,"fix":{"range":[3020,3020],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":89,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":90,"endColumn":1,"fix":{"range":[3060,3060],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":102,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":103,"endColumn":1,"fix":{"range":[3296,3296],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":103,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":104,"endColumn":1,"fix":{"range":[3336,3336],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":114,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":115,"endColumn":1,"fix":{"range":[3655,3655],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":115,"column":58,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":116,"endColumn":1,"fix":{"range":[3713,3713],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":126,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":127,"endColumn":1,"fix":{"range":[4048,4048],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":127,"column":70,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":128,"endColumn":1,"fix":{"range":[4118,4118],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":140,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":141,"endColumn":1,"fix":{"range":[4280,4280],"text":";"}}],"suppressedMessages":[],"errorCount":24,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":24,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\sidebar.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":44,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[74,74],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":61,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[135,135],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":41,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[176,176],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":49,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[226,226],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[259,259],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":48,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[307,307],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":46,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[353,353],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":10,"column":54,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":11,"endColumn":1,"fix":{"range":[407,407],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":17,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":18,"endColumn":1,"fix":{"range":[521,521],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":18,"column":52,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":19,"endColumn":1,"fix":{"range":[573,573],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[681,681],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":44,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[726,726],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":48,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[774,774],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":28,"column":30,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":29,"endColumn":1,"fix":{"range":[804,804],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":29,"column":37,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":30,"endColumn":1,"fix":{"range":[841,841],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":30,"column":34,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":31,"endColumn":1,"fix":{"range":[875,875],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":31,"column":38,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":32,"endColumn":1,"fix":{"range":[913,913],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":43,"column":77,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":44,"endColumn":1,"fix":{"range":[1219,1219],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":46,"column":51,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":47,"endColumn":1,"fix":{"range":[1295,1295],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":48,"column":73,"nodeType":"ThrowStatement","messageId":"missingSemi","endLine":49,"endColumn":1,"fix":{"range":[1386,1386],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":51,"column":17,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":52,"endColumn":1,"fix":{"range":[1408,1408],"text":";"}},{"ruleId":"func-call-spacing","severity":2,"message":"Unexpected whitespace between function name and paren.","line":59,"column":19,"nodeType":"CallExpression","messageId":"unexpectedWhitespace","endLine":59,"endColumn":19,"fix":{"range":[1569,1570],"text":""}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":74,"column":35,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":75,"endColumn":1,"fix":{"range":[1811,1811],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":75,"column":62,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":76,"endColumn":1,"fix":{"range":[1873,1873],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":79,"column":58,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":80,"endColumn":1,"fix":{"range":[2061,2061],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":80,"column":35,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":81,"endColumn":1,"fix":{"range":[2096,2096],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":83,"column":76,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":84,"endColumn":1,"fix":{"range":[2271,2271],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":85,"column":33,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":86,"endColumn":1,"fix":{"range":[2331,2331],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":87,"column":30,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":88,"endColumn":1,"fix":{"range":[2378,2378],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":91,"column":107,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":92,"endColumn":1,"fix":{"range":[2555,2555],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":94,"column":6,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":95,"endColumn":1,"fix":{"range":[2596,2596],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":100,"column":35,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":101,"endColumn":1,"fix":{"range":[2784,2784],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":101,"column":43,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":102,"endColumn":1,"fix":{"range":[2827,2827],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":110,"column":33,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":111,"endColumn":1,"fix":{"range":[3121,3121],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":111,"column":26,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":112,"endColumn":1,"fix":{"range":[3147,3147],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":113,"column":8,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":114,"endColumn":1,"fix":{"range":[3165,3165],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":115,"column":56,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":116,"endColumn":1,"fix":{"range":[3222,3222],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":116,"column":72,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":117,"endColumn":1,"fix":{"range":[3294,3294],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":117,"column":24,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":118,"endColumn":1,"fix":{"range":[3318,3318],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":121,"column":50,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":122,"endColumn":1,"fix":{"range":[3519,3519],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":134,"column":6,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":135,"endColumn":1,"fix":{"range":[3823,3823],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":158,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":159,"endColumn":1,"fix":{"range":[4502,4502],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":160,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":161,"endColumn":1,"fix":{"range":[4508,4508],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":161,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":162,"endColumn":1,"fix":{"range":[4556,4556],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":182,"column":72,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":183,"endColumn":1,"fix":{"range":[5008,5008],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":196,"column":8,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":197,"endColumn":1,"fix":{"range":[5317,5317],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":220,"column":8,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":221,"endColumn":1,"fix":{"range":[6131,6131],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":265,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":266,"endColumn":1,"fix":{"range":[8180,8180],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":267,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":268,"endColumn":1,"fix":{"range":[8186,8186],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":268,"column":32,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":269,"endColumn":1,"fix":{"range":[8218,8218],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":274,"column":41,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":275,"endColumn":1,"fix":{"range":[8421,8421],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":284,"column":25,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":285,"endColumn":1,"fix":{"range":[8626,8626],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":285,"column":24,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":286,"endColumn":1,"fix":{"range":[8650,8650],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":292,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":293,"endColumn":1,"fix":{"range":[8774,8774],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":293,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":294,"endColumn":1,"fix":{"range":[8777,8777],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":294,"column":46,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":295,"endColumn":1,"fix":{"range":[8823,8823],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":300,"column":41,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":301,"endColumn":1,"fix":{"range":[8995,8995],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":321,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":322,"endColumn":1,"fix":{"range":[10018,10018],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":322,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":323,"endColumn":1,"fix":{"range":[10021,10021],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":323,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":324,"endColumn":1,"fix":{"range":[10061,10061],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":339,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":340,"endColumn":1,"fix":{"range":[10579,10579],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":340,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":341,"endColumn":1,"fix":{"range":[10582,10582],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":341,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":342,"endColumn":1,"fix":{"range":[10624,10624],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":357,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":358,"endColumn":1,"fix":{"range":[11015,11015],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":358,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":359,"endColumn":1,"fix":{"range":[11018,11018],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":359,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":360,"endColumn":1,"fix":{"range":[11060,11060],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":372,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":373,"endColumn":1,"fix":{"range":[11338,11338],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":373,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":374,"endColumn":1,"fix":{"range":[11341,11341],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":374,"column":44,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":375,"endColumn":1,"fix":{"range":[11385,11385],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":387,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":388,"endColumn":1,"fix":{"range":[11663,11663],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":388,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":389,"endColumn":1,"fix":{"range":[11666,11666],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":389,"column":44,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":390,"endColumn":1,"fix":{"range":[11710,11710],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":402,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":403,"endColumn":1,"fix":{"range":[12037,12037],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":403,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":404,"endColumn":1,"fix":{"range":[12040,12040],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":404,"column":50,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":405,"endColumn":1,"fix":{"range":[12090,12090],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":420,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":421,"endColumn":1,"fix":{"range":[12465,12465],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":421,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":422,"endColumn":1,"fix":{"range":[12468,12468],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":422,"column":46,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":423,"endColumn":1,"fix":{"range":[12514,12514],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":435,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":436,"endColumn":1,"fix":{"range":[12808,12808],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":436,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":437,"endColumn":1,"fix":{"range":[12811,12811],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":437,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":438,"endColumn":1,"fix":{"range":[12853,12853],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":443,"column":38,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":444,"endColumn":1,"fix":{"range":[13063,13063],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":456,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":457,"endColumn":1,"fix":{"range":[13539,13539],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":457,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":458,"endColumn":1,"fix":{"range":[13542,13542],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":458,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":459,"endColumn":1,"fix":{"range":[13594,13594],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":464,"column":41,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":465,"endColumn":1,"fix":{"range":[13814,13814],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":479,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":480,"endColumn":1,"fix":{"range":[14418,14418],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":480,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":481,"endColumn":1,"fix":{"range":[14421,14421],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":481,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":482,"endColumn":1,"fix":{"range":[14475,14475],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":493,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":494,"endColumn":1,"fix":{"range":[14733,14733],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":494,"column":56,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":495,"endColumn":1,"fix":{"range":[14789,14789],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":506,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":507,"endColumn":1,"fix":{"range":[15050,15050],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":507,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":508,"endColumn":1,"fix":{"range":[15090,15090],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":519,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":520,"endColumn":1,"fix":{"range":[15347,15347],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":520,"column":48,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":521,"endColumn":1,"fix":{"range":[15395,15395],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":542,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":543,"endColumn":1,"fix":{"range":[16825,16825],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":564,"column":43,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":565,"endColumn":1,"fix":{"range":[17318,17318],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":565,"column":45,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":566,"endColumn":1,"fix":{"range":[17363,17363],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":576,"column":6,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":577,"endColumn":1,"fix":{"range":[17620,17620],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":579,"column":20,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":580,"endColumn":1,"fix":{"range":[17661,17661],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":585,"column":8,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":586,"endColumn":1,"fix":{"range":[17760,17760],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":598,"column":6,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":599,"endColumn":1,"fix":{"range":[18036,18036],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":600,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":601,"endColumn":1,"fix":{"range":[18042,18042],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":601,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":602,"endColumn":1,"fix":{"range":[18094,18094],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":610,"column":41,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":611,"endColumn":1,"fix":{"range":[18366,18366],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":630,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":631,"endColumn":1,"fix":{"range":[19400,19400],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":631,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":632,"endColumn":1,"fix":{"range":[19403,19403],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":632,"column":52,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":633,"endColumn":1,"fix":{"range":[19455,19455],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":652,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":653,"endColumn":1,"fix":{"range":[20203,20203],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":653,"column":50,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":654,"endColumn":1,"fix":{"range":[20253,20253],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":663,"column":53,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":664,"endColumn":1,"fix":{"range":[20563,20563],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":664,"column":9,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":665,"endColumn":1,"fix":{"range":[20572,20572],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":689,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":690,"endColumn":1,"fix":{"range":[21139,21139],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":690,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":691,"endColumn":1,"fix":{"range":[21142,21142],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":691,"column":56,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":692,"endColumn":1,"fix":{"range":[21198,21198],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":707,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":708,"endColumn":1,"fix":{"range":[21590,21590],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":708,"column":46,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":709,"endColumn":1,"fix":{"range":[21636,21636],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":713,"column":54,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":714,"endColumn":1,"fix":{"range":[21782,21782],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":714,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":715,"endColumn":1,"fix":{"range":[21836,21836],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":724,"column":36,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":725,"endColumn":1,"fix":{"range":[22123,22123],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":742,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":743,"endColumn":1,"fix":{"range":[23047,23047],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":743,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":744,"endColumn":1,"fix":{"range":[23050,23050],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":744,"column":58,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":745,"endColumn":1,"fix":{"range":[23108,23108],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":771,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":772,"endColumn":1,"fix":{"range":[23566,23566],"text":";"}}],"suppressedMessages":[],"errorCount":125,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":125,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\skeleton.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[32,32],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[237,237],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":20,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[260,260],"text":";"}}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\slider.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":58,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[88,88],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[122,122],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":23,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":24,"endColumn":1,"fix":{"range":[1003,1003],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[1057,1057],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":26,"column":18,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":27,"endColumn":1,"fix":{"range":[1076,1076],"text":";"}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\switch.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":59,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[89,89],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[123,123],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[1064,1064],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":25,"column":55,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":26,"endColumn":1,"fix":{"range":[1119,1119],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":18,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[1138,1138],"text":";"}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\table.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[64,64],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":16,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":17,"endColumn":1,"fix":{"range":[374,374],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":17,"column":28,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":18,"endColumn":1,"fix":{"range":[402,402],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":24,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":25,"endColumn":1,"fix":{"range":[635,635],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":25,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":26,"endColumn":1,"fix":{"range":[675,675],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":36,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":37,"endColumn":1,"fix":{"range":[931,931],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":37,"column":36,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":38,"endColumn":1,"fix":{"range":[967,967],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":51,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":52,"endColumn":1,"fix":{"range":[1272,1272],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":52,"column":40,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":53,"endColumn":1,"fix":{"range":[1312,1312],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":66,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":67,"endColumn":1,"fix":{"range":[1623,1623],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":67,"column":34,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":68,"endColumn":1,"fix":{"range":[1657,1657],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":81,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":82,"endColumn":1,"fix":{"range":[1994,1994],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":82,"column":36,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":83,"endColumn":1,"fix":{"range":[2030,2030],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":93,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":94,"endColumn":1,"fix":{"range":[2299,2299],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":94,"column":36,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":95,"endColumn":1,"fix":{"range":[2335,2335],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":105,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":106,"endColumn":1,"fix":{"range":[2604,2604],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":106,"column":42,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":107,"endColumn":1,"fix":{"range":[2646,2646],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":117,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":118,"endColumn":1,"fix":{"range":[2764,2764],"text":";"}}],"suppressedMessages":[],"errorCount":19,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":19,"fixableWarningCount":0,"source":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\tabs.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":54,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[84,84],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[118,118],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":32,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[151,151],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":20,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":21,"endColumn":1,"fix":{"range":[533,533],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":21,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":22,"endColumn":1,"fix":{"range":[587,587],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":35,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":36,"endColumn":1,"fix":{"range":[1278,1278],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":36,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":37,"endColumn":1,"fix":{"range":[1338,1338],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":50,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":51,"endColumn":1,"fix":{"range":[1769,1769],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":51,"column":60,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":52,"endColumn":1,"fix":{"range":[1829,1829],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":53,"column":52,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":54,"endColumn":1,"fix":{"range":[1882,1882],"text":";"}}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":11,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\theme-provider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\toast.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":57,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[87,87],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[153,153],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[186,186],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[220,220],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":47,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[268,268],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":22,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":23,"endColumn":1,"fix":{"range":[712,712],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":23,"column":65,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":24,"endColumn":1,"fix":{"range":[777,777],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":39,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":40,"endColumn":1,"fix":{"range":[1698,1698],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":52,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":53,"endColumn":1,"fix":{"range":[2071,2071],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":53,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":54,"endColumn":1,"fix":{"range":[2074,2074],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":54,"column":53,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":55,"endColumn":1,"fix":{"range":[2127,2127],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":68,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":69,"endColumn":1,"fix":{"range":[2948,2948],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":69,"column":61,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":70,"endColumn":1,"fix":{"range":[3009,3009],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":86,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":87,"endColumn":1,"fix":{"range":[3728,3728],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":87,"column":59,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":88,"endColumn":1,"fix":{"range":[3787,3787],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":98,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":99,"endColumn":1,"fix":{"range":[4093,4093],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":99,"column":59,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":100,"endColumn":1,"fix":{"range":[4152,4152],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":110,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":111,"endColumn":1,"fix":{"range":[4479,4479],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":111,"column":71,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":112,"endColumn":1,"fix":{"range":[4550,4550],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":127,"column":2,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":128,"endColumn":1,"fix":{"range":[4844,4844],"text":";"}}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":21,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\toaster.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":45,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[175,175],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":32,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[236,236],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":28,"column":10,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":29,"endColumn":1,"fix":{"range":[710,710],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":32,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":33,"endColumn":1,"fix":{"range":[769,769],"text":";"}}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\toggle-group.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":69,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[113,113],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":61,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[174,174],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":7,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":8,"endColumn":1,"fix":{"range":[208,208],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":56,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[264,264],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[399,399],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":31,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":32,"endColumn":1,"fix":{"range":[944,944],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":33,"column":64,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":34,"endColumn":1,"fix":{"range":[1009,1009],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":40,"column":55,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":41,"endColumn":1,"fix":{"range":[1333,1333],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":56,"column":4,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":57,"endColumn":1,"fix":{"range":[1639,1639],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":57,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":58,"endColumn":1,"fix":{"range":[1642,1642],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":59,"column":68,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":60,"endColumn":1,"fix":{"range":[1711,1711],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":61,"column":40,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":62,"endColumn":1,"fix":{"range":[1752,1752],"text":";"}}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":14,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\toggle.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":58,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[88,88],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":66,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[154,154],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[188,188],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[1070,1070],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":39,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":40,"endColumn":1,"fix":{"range":[1436,1436],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":41,"column":54,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":42,"endColumn":1,"fix":{"range":[1491,1491],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":43,"column":34,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":44,"endColumn":1,"fix":{"range":[1526,1526],"text":";"}}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\components\\ui\\tooltip.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":13,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[12,12],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":4,"column":60,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":5,"endColumn":1,"fix":{"range":[104,104],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":33,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[138,138],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":8,"column":50,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":9,"endColumn":1,"fix":{"range":[189,189],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":10,"column":38,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":11,"endColumn":1,"fix":{"range":[228,228],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":48,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[277,277],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":27,"column":3,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":28,"endColumn":1,"fix":{"range":[1073,1073],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":28,"column":66,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":29,"endColumn":1,"fix":{"range":[1139,1139],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":30,"column":68,"nodeType":"ExportNamedDeclaration","messageId":"missingSemi","endLine":31,"endColumn":1,"fix":{"range":[1208,1208],"text":";"}}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":10,"fixableWarningCount":0,"source":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\hooks\\use-mobile.tsx","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":31,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[30,30],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":30,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":4,"endColumn":1,"fix":{"range":[61,61],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":6,"column":81,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":7,"endColumn":1,"fix":{"range":[175,175],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":77,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":10,"endColumn":1,"fix":{"range":[279,279],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":11,"column":57,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":12,"endColumn":1,"fix":{"range":[365,365],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":6,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[371,371],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":13,"column":45,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":14,"endColumn":1,"fix":{"range":[416,416],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":14,"column":55,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":15,"endColumn":1,"fix":{"range":[471,471],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":15,"column":61,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":16,"endColumn":1,"fix":{"range":[532,532],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":16,"column":9,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":17,"endColumn":1,"fix":{"range":[541,541],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":18,"column":27,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":19,"endColumn":1,"fix":{"range":[569,569],"text":";"}}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":11,"fixableWarningCount":0,"source":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return Boolean(isMobile)\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\hooks\\use-toast.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'actionTypes' is assigned a value but only used as a type.","line":17,"column":7,"nodeType":null,"messageId":"usedOnlyAsType","endLine":17,"endColumn":18}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @format */\n\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n\tid: string;\n\ttitle?: React.ReactNode;\n\tdescription?: React.ReactNode;\n\taction?: ToastActionElement;\n};\n\nconst actionTypes = {\n\tADD_TOAST: \"ADD_TOAST\",\n\tUPDATE_TOAST: \"UPDATE_TOAST\",\n\tDISMISS_TOAST: \"DISMISS_TOAST\",\n\tREMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n\tcount = (count + 1) % Number.MAX_SAFE_INTEGER;\n\treturn count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n\t| {\n\t\t\ttype: ActionType[\"ADD_TOAST\"];\n\t\t\ttoast: ToasterToast;\n\t  }\n\t| {\n\t\t\ttype: ActionType[\"UPDATE_TOAST\"];\n\t\t\ttoast: Partial<ToasterToast>;\n\t  }\n\t| {\n\t\t\ttype: ActionType[\"DISMISS_TOAST\"];\n\t\t\ttoastId?: ToasterToast[\"id\"];\n\t  }\n\t| {\n\t\t\ttype: ActionType[\"REMOVE_TOAST\"];\n\t\t\ttoastId?: ToasterToast[\"id\"];\n\t  };\n\ninterface State {\n\ttoasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n\tif (toastTimeouts.has(toastId)) {\n\t\treturn;\n\t}\n\n\tconst timeout = setTimeout(() => {\n\t\ttoastTimeouts.delete(toastId);\n\t\tdispatch({\n\t\t\ttype: \"REMOVE_TOAST\",\n\t\t\ttoastId: toastId,\n\t\t});\n\t}, TOAST_REMOVE_DELAY);\n\n\ttoastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n\tswitch (action.type) {\n\t\tcase \"ADD_TOAST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n\t\t\t};\n\n\t\tcase \"UPDATE_TOAST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: state.toasts.map((t) =>\n\t\t\t\t\tt.id === action.toast.id ? { ...t, ...action.toast } : t\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase \"DISMISS_TOAST\": {\n\t\t\tconst { toastId } = action;\n\n\t\t\t// ! Side effects ! - This could be extracted into a dismissToast() action,\n\t\t\t// but I'll keep it here for simplicity\n\t\t\tif (toastId) {\n\t\t\t\taddToRemoveQueue(toastId);\n\t\t\t} else {\n\t\t\t\tstate.toasts.forEach((toast) => {\n\t\t\t\t\taddToRemoveQueue(toast.id);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: state.toasts.map((t) =>\n\t\t\t\t\tt.id === toastId || toastId === undefined\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...t,\n\t\t\t\t\t\t\t\topen: false,\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: t\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tcase \"REMOVE_TOAST\":\n\t\t\tif (action.toastId === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\ttoasts: [],\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: state.toasts.filter((t) => t.id !== action.toastId),\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n\tmemoryState = reducer(memoryState, action);\n\tlisteners.forEach((listener) => {\n\t\tlistener(memoryState);\n\t});\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n\tconst id = genId();\n\n\tconst update = (props: ToasterToast) =>\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_TOAST\",\n\t\t\ttoast: { ...props, id },\n\t\t});\n\tconst dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n\tdispatch({\n\t\ttype: \"ADD_TOAST\",\n\t\ttoast: {\n\t\t\t...props,\n\t\t\tid,\n\t\t\topen: true,\n\t\t\tonOpenChange: (open) => {\n\t\t\t\tif (!open) dismiss();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn {\n\t\tid: id,\n\t\tdismiss,\n\t\tupdate,\n\t};\n}\n\nfunction useToast() {\n\tconst [state, setState] = React.useState<State>(memoryState);\n\n\tReact.useEffect(() => {\n\t\tlisteners.push(setState);\n\t\treturn () => {\n\t\t\tconst index = listeners.indexOf(setState);\n\t\t\tif (index > -1) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t};\n\t}, [state]);\n\n\treturn {\n\t\t...state,\n\t\ttoast,\n\t\tdismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n\t};\n}\n\nexport { useToast, toast };\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\hooks\\useJobProgress.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\lib\\audio.ts","messages":[{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":19,"column":64,"nodeType":"Literal","messageId":"wrongQuotes","endLine":19,"endColumn":67,"fix":{"range":[514,517],"text":"\"0\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":46,"column":29,"nodeType":"Literal","messageId":"wrongQuotes","endLine":46,"endColumn":34,"fix":{"range":[1332,1337],"text":"\"mp3\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":46,"column":36,"nodeType":"Literal","messageId":"wrongQuotes","endLine":46,"endColumn":41,"fix":{"range":[1339,1344],"text":"\"wav\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":46,"column":43,"nodeType":"Literal","messageId":"wrongQuotes","endLine":46,"endColumn":49,"fix":{"range":[1346,1352],"text":"\"flac\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":46,"column":51,"nodeType":"Literal","messageId":"wrongQuotes","endLine":46,"endColumn":57,"fix":{"range":[1354,1360],"text":"\"aiff\""}}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"/**\n * Utility functions for audio processing and playback\n */\n\nexport interface AudioInfo {\n  duration: number;\n  format: string;\n  sampleRate?: number;\n  bitrate?: number;\n}\n\n/**\n * Convert seconds to formatted duration string (MM:SS)\n */\nexport function formatDuration(seconds: number): string {\n  if (isNaN(seconds) || seconds === 0) return \"--:--\";\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}\n\n/**\n * Calculate bars from beats and time signature\n * @param beats Number of beats\n * @param timeSignature Time signature (e.g., 4 for 4/4)\n */\nexport function calculateBars(beats: number, timeSignature = 4): number {\n  return Math.floor(beats / timeSignature);\n}\n\n/**\n * Calculate duration in seconds from tempo (BPM) and number of bars\n * @param bpm Tempo in beats per minute\n * @param bars Number of bars\n * @param timeSignature Time signature (e.g., 4 for 4/4)\n */\nexport function calculateDurationFromBars(bpm: number, bars: number, timeSignature = 4): number {\n  // Duration = (bars * timeSignature * 60) / BPM\n  return (bars * timeSignature * 60) / bpm;\n}\n\n/**\n * Check if a format is supported for upload\n */\nexport function isSupportedFormat(format: string): boolean {\n  const supportedFormats = ['mp3', 'wav', 'flac', 'aiff'];\n  return supportedFormats.includes(format.toLowerCase());\n}\n\n/**\n * Check if a file size is within upload limits\n */\nexport function isWithinSizeLimit(sizeInBytes: number, maxSizeMB = 15): boolean {\n  return sizeInBytes <= maxSizeMB * 1024 * 1024;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\lib\\queryClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\lib\\utils.ts","messages":[{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":45,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[44,44],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":41,"nodeType":"ImportDeclaration","messageId":"missingSemi","endLine":3,"endColumn":1,"fix":{"range":[85,85],"text":";"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":5,"column":31,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":6,"endColumn":1,"fix":{"range":[163,163],"text":";"}}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\lib\\waveform.ts","messages":[{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":23,"column":34,"nodeType":"Literal","messageId":"wrongQuotes","endLine":23,"endColumn":43,"fix":{"range":[539,548],"text":"\"#4F46E5\""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'progressColor' is assigned a value but never used.","line":23,"column":45,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":58},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":23,"column":61,"nodeType":"Literal","messageId":"wrongQuotes","endLine":23,"endColumn":70,"fix":{"range":[566,575],"text":"\"#6366F1\""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":24,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":24,"endColumn":3,"fix":{"range":[629,631],"text":""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":26,"column":25,"nodeType":"Literal","messageId":"wrongQuotes","endLine":26,"endColumn":27,"fix":{"range":[677,679],"text":"\"\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":28,"column":29,"nodeType":"Literal","messageId":"wrongQuotes","endLine":28,"endColumn":35,"fix":{"range":[751,757],"text":"\"flex\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":29,"column":32,"nodeType":"Literal","messageId":"wrongQuotes","endLine":29,"endColumn":40,"fix":{"range":[790,798],"text":"\"center\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":30,"column":31,"nodeType":"Literal","messageId":"wrongQuotes","endLine":30,"endColumn":37,"fix":{"range":[830,836],"text":"\"auto\""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":31,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":31,"endColumn":3,"fix":{"range":[838,840],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":35,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":35,"endColumn":3,"fix":{"range":[1009,1011],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":38,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":38,"endColumn":3,"fix":{"range":[1126,1128],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":44,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":44,"endColumn":5,"fix":{"range":[1359,1363],"text":""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":45,"column":40,"nodeType":"Literal","messageId":"wrongQuotes","endLine":45,"endColumn":45,"fix":{"range":[1403,1408],"text":"\"div\""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":50,"column":30,"nodeType":"Literal","messageId":"wrongQuotes","endLine":50,"endColumn":35,"fix":{"range":[1606,1611],"text":"\"1px\""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":51,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":51,"endColumn":5,"fix":{"range":[1613,1617],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'height' is assigned a value but never used.","line":61,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":61,"endColumn":28},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":62,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":62,"endColumn":3,"fix":{"range":[1942,1944],"text":""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":64,"column":25,"nodeType":"Literal","messageId":"wrongQuotes","endLine":64,"endColumn":27,"fix":{"range":[1990,1992],"text":"\"\""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":65,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":65,"endColumn":3,"fix":{"range":[1994,1996],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":69,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":69,"endColumn":3,"fix":{"range":[2165,2167],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":72,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":72,"endColumn":3,"fix":{"range":[2264,2266],"text":""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":80,"column":98,"nodeType":"Literal","messageId":"wrongQuotes","endLine":80,"endColumn":107,"fix":{"range":[2483,2492],"text":"\"#6366F1\""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":83,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":83,"endColumn":3,"fix":{"range":[2597,2599],"text":""}},{"ruleId":"quotes","severity":2,"message":"Strings must use doublequote.","line":86,"column":70,"nodeType":"Literal","messageId":"wrongQuotes","endLine":86,"endColumn":79,"fix":{"range":[2751,2760],"text":"\"#4F46E5\""}}],"suppressedMessages":[],"errorCount":24,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":22,"fixableWarningCount":0,"source":"/**\n * Utility functions for waveform visualization\n */\n\ninterface WaveformOptions {\n  container: HTMLElement;\n  waveColor?: string;\n  progressColor?: string;\n  height?: number;\n  barWidth?: number;\n  barGap?: number;\n  responsive?: boolean;\n}\n\n/**\n * Generate a simple waveform visualization from audio data\n * Note: This is a simplified version. In a production app, use WaveSurfer.js\n */\nexport function generateSimpleWaveform(\n  audioData: Float32Array | number[],\n  options: WaveformOptions\n): void {\n  const { container, waveColor = '#4F46E5', progressColor = '#6366F1', height = 100, barWidth = 3, barGap = 1 } = options;\n  \n  // Clear container\n  container.innerHTML = '';\n  container.style.height = `${height}px`;\n  container.style.display = 'flex';\n  container.style.alignItems = 'center';\n  container.style.overflowX = 'auto';\n  \n  // Calculate how many bars fit in the container\n  const containerWidth = container.clientWidth;\n  const barsCount = Math.floor(containerWidth / (barWidth + barGap));\n  \n  // Sample the audio data to fit the number of bars\n  const dataStep = Math.floor(audioData.length / barsCount);\n  \n  // Create bars\n  for (let i = 0; i < barsCount; i++) {\n    const index = Math.min(i * dataStep, audioData.length - 1);\n    const value = Math.abs(audioData[index]);\n    const barHeight = Math.max(1, Math.floor(value * height));\n    \n    const bar = document.createElement('div');\n    bar.style.width = `${barWidth}px`;\n    bar.style.marginRight = `${barGap}px`;\n    bar.style.height = `${barHeight}px`;\n    bar.style.backgroundColor = waveColor;\n    bar.style.borderRadius = '1px';\n    \n    container.appendChild(bar);\n  }\n}\n\n/**\n * Generate a random waveform for display purposes\n * Note: This should only be used for UI mockups when no real data is available\n */\nexport function generateRandomWaveform(options: WaveformOptions): void {\n  const { container, height = 100, barWidth = 3, barGap = 1 } = options;\n  \n  // Clear container\n  container.innerHTML = '';\n  \n  // Calculate how many bars fit in the container\n  const containerWidth = container.clientWidth;\n  const barsCount = Math.floor(containerWidth / (barWidth + barGap));\n  \n  // Create random data\n  const randomData = Array(barsCount).fill(0).map(() => Math.random());\n  \n  // Create waveform\n  generateSimpleWaveform(randomData, options);\n}\n\n/**\n * Update progress on a simple waveform\n */\nexport function updateWaveformProgress(container: HTMLElement, progress: number, progressColor = '#6366F1'): void {\n  const bars = container.children;\n  const progressIndex = Math.floor(bars.length * progress);\n  \n  for (let i = 0; i < bars.length; i++) {\n    const bar = bars[i] as HTMLElement;\n    bar.style.backgroundColor = i <= progressIndex ? progressColor : '#4F46E5';\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\pages\\Home.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CompletedMixCard' is defined but never used.","line":10,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":24},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":62,"column":6,"nodeType":"MemberExpression","messageId":"unexpected","endLine":62,"endColumn":19,"suggestions":[{"fix":{"range":[2070,2125],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'tracks' is assigned a value but never used.","line":75,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":75,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'handlePreview' is assigned a value but never used.","line":124,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":124,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'handleAdjust' is assigned a value but never used.","line":129,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":129,"endColumn":20},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":144,"column":10,"nodeType":"CallExpression","messageId":"unexpected","endLine":146,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'error' is defined but never used.","line":159,"column":19,"nodeType":null,"messageId":"unusedVar","endLine":159,"endColumn":24}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport UploadSection from \"@/components/UploadSection\";\nimport SettingsPanel from \"@/components/SettingsPanel\";\nimport ProcessingInfo from \"@/components/ProcessingInfo\";\nimport TrackPreview from \"@/components/TrackPreview\";\nimport CompletedMixCard from \"@/components/CompletedMixCard\";\nimport { AudioTrack } from \"@shared/schema\";\n\nconst Home: React.FC = () => {\n\tconst { toast } = useToast();\n\tconst [currentTrackId, setCurrentTrackId] = useState<number | null>(() => {\n\t\tconst saved = localStorage.getItem(\"currentTrackId\");\n\t\treturn saved ? parseInt(saved, 10) : null;\n\t});\n\tconst [isProcessing, setIsProcessing] = useState(() => {\n\t\treturn localStorage.getItem(\"isProcessing\") === \"true\";\n\t});\n\tconst [isProcessed, setIsProcessed] = useState(() => {\n\t\treturn localStorage.getItem(\"isProcessed\") === \"true\";\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\t// Persist state changes to localStorage\n\tuseEffect(() => {\n\t\tif (currentTrackId) {\n\t\t\tlocalStorage.setItem(\"currentTrackId\", currentTrackId.toString());\n\t\t} else {\n\t\t\tlocalStorage.removeItem(\"currentTrackId\");\n\t\t}\n\t}, [currentTrackId]);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"isProcessed\", isProcessed.toString());\n\t}, [isProcessed]);\n\n\t// Check processing status on initial load\n\tuseEffect(() => {\n\t\tconst checkInitialStatus = async () => {\n\t\t\tif (currentTrackId && isProcessing) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`/api/tracks/${currentTrackId}/status`);\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\tif (data.status === \"completed\") {\n\t\t\t\t\t\tsetIsProcessing(false);\n\t\t\t\t\t\tsetIsProcessed(true);\n\t\t\t\t\t\tlocalStorage.setItem(\"isProcessing\", \"false\");\n\t\t\t\t\t\tlocalStorage.setItem(\"isProcessed\", \"true\");\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tdata.status === \"processing\" ||\n\t\t\t\t\t\tdata.status === \"regenerate\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetIsProcessing(true);\n\t\t\t\t\t\tlocalStorage.setItem(\"isProcessing\", \"true\");\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Error checking initial status:\", error);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcheckInitialStatus();\n\t}, [currentTrackId]);\n\n\t// Persist processing state\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"isProcessing\", isProcessing.toString());\n\t}, [isProcessing]);\n\n\tconst { data: tracks } = useQuery<AudioTrack[]>({\n\t\tqueryKey: [\"/api/tracks\"],\n\t\tstaleTime: Infinity,\n\t\tcacheTime: Infinity,\n\t\tonSuccess: (tracks) => {\n\t\t\t// Set the most recent track as current if none selected\n\t\t\tif (!currentTrackId && tracks?.length > 0) {\n\t\t\t\tsetCurrentTrackId(tracks[0].id);\n\t\t\t\tsetIsProcessed(tracks[0].status === \"completed\");\n\t\t\t}\n\t\t},\n\t});\n\n\tconst { data: track } = useQuery<AudioTrack>({\n\t\tqueryKey: currentTrackId ? [`/api/tracks/${currentTrackId}`] : [\"no-track\"],\n\t\tenabled: Boolean(currentTrackId),\n\t\trefetchInterval: isProcessing ? 2000 : false,\n\t});\n\n\t// Check if the track is already processed when loading\n\tuseEffect(() => {\n\t\tif (track && track.status === \"completed\" && track.extendedPath) {\n\t\t\tsetIsProcessed(true);\n\t\t\tsetIsProcessing(false);\n\t\t}\n\t}, [track]);\n\n\tconst handleUploadSuccess = (trackId: number) => {\n\t\tsetCurrentTrackId(trackId);\n\t\tsetIsProcessed(false);\n\t};\n\n\tconst handleProcessingStart = () => {\n\t\tsetIsProcessing(true);\n\t};\n\n\tconst handleProcessingComplete = () => {\n\t\tsetIsProcessing(false);\n\t\tsetIsProcessed(true);\n\t\t// Refresh track data to get the latest info\n\t\tqueryClient.invalidateQueries({\n\t\t\tqueryKey: [`/api/tracks/${currentTrackId}`],\n\t\t});\n\t};\n\n\tconst handleProcessingCancel = () => {\n\t\tsetIsProcessing(false);\n\t};\n\n\tconst handlePreview = () => {\n\t\t// Switch to the extended tab in TrackPreview\n\t\t// This is handled through props\n\t};\n\n\tconst handleAdjust = () => {\n\t\t// Allow user to adjust settings and reprocess\n\t\tsetIsProcessed(false);\n\t};\n\n\treturn (\n\t\t<div className='container mx-auto px-4 py-8'>\n\t\t\t<div className='grid grid-cols-1 lg:grid-cols-12 gap-8'>\n\t\t\t\t{/* Left column: Upload & Controls */}\n\t\t\t\t<div className='lg:col-span-4 space-y-6'>\n\t\t\t\t\t<UploadSection onUploadSuccess={handleUploadSuccess} />\n\t\t\t\t\t{currentTrackId && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\twindow.confirm(\n\t\t\t\t\t\t\t\t\t\t\"Are you sure you want to clear all tracks? This cannot be undone.\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait fetch(\"/api/tracks\", { method: \"DELETE\" });\n\t\t\t\t\t\t\t\t\t\tqueryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\t\t\tqueryKey: [\"/api/tracks\"],\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetCurrentTrackId(null);\n\t\t\t\t\t\t\t\t\t\tsetIsProcessed(false);\n\t\t\t\t\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Tracks Cleared\",\n\t\t\t\t\t\t\t\t\t\t\tdescription: \"All tracks have been removed successfully.\",\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\t\t\t\t\t\t\tdescription: \"Failed to clear tracks.\",\n\t\t\t\t\t\t\t\t\t\t\tvariant: \"destructive\",\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName='w-full bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md text-sm font-medium shadow-sm flex items-center justify-center gap-2'>\n\t\t\t\t\t\t\t<span className='material-icons text-sm'>delete</span>\n\t\t\t\t\t\t\tClear All Tracks\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{isProcessing && currentTrackId ? (\n\t\t\t\t\t\t<ProcessingInfo\n\t\t\t\t\t\t\ttrackId={currentTrackId}\n\t\t\t\t\t\t\tonComplete={handleProcessingComplete}\n\t\t\t\t\t\t\tonCancel={handleProcessingCancel}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<SettingsPanel\n\t\t\t\t\t\t\ttrackId={currentTrackId}\n\t\t\t\t\t\t\tonProcessingStart={handleProcessingStart}\n\t\t\t\t\t\t\tdisabled={isProcessed}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{/* Right column: Results & Preview */}\n\t\t\t\t<div className='lg:col-span-8'>\n\t\t\t\t\t<TrackPreview trackId={currentTrackId} isProcessed={isProcessed} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]},{"filePath":"C:\\Users\\Dhanush\\Desktop\\finalupdarw\\music-dj-feature-new-code\\client\\src\\pages\\not-found.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"],"info":{"deprecatedSince":"8.0.0","replacedBy":[{"rule":{"name":"@typescript-eslint/no-require-imports","url":"https://typescript-eslint.io/rules/no-require-imports"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/8334"}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/block-spacing"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/brace-style"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/comma-spacing"}}]}},{"ruleId":"comma-style","replacedBy":["@stylistic/comma-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"comma-style","url":"https://eslint.style/rules/comma-style"}}]}},{"ruleId":"computed-property-spacing","replacedBy":["@stylistic/computed-property-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"computed-property-spacing","url":"https://eslint.style/rules/computed-property-spacing"}}]}},{"ruleId":"func-call-spacing","replacedBy":["@stylistic/function-call-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"function-call-spacing","url":"https://eslint.style/rules/function-call-spacing"}}]}},{"ruleId":"key-spacing","replacedBy":["@stylistic/key-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"key-spacing","url":"https://eslint.style/rules/key-spacing"}}]}},{"ruleId":"keyword-spacing","replacedBy":["@stylistic/keyword-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"keyword-spacing","url":"https://eslint.style/rules/keyword-spacing"}}]}},{"ruleId":"no-trailing-spaces","replacedBy":["@stylistic/no-trailing-spaces"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"no-trailing-spaces","url":"https://eslint.style/rules/no-trailing-spaces"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/object-curly-spacing"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"semi","url":"https://eslint.style/rules/semi"}}]}},{"ruleId":"space-before-blocks","replacedBy":["@stylistic/space-before-blocks"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-before-blocks","url":"https://eslint.style/rules/space-before-blocks"}}]}},{"ruleId":"space-infix-ops","replacedBy":["@stylistic/space-infix-ops"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"space-infix-ops","url":"https://eslint.style/rules/space-infix-ops"}}]}},{"ruleId":"quotes","replacedBy":["@stylistic/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"quotes","url":"https://eslint.style/rules/quotes"}}]}},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"],"info":{"message":"The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.","url":"https://eslint.org/blog/2023/09/eslint-v8.50.0-released/","deprecatedSince":"8.50.0","availableUntil":null,"replacedBy":[{"rule":{"name":"no-object-constructor","url":"https://eslint.org/docs/rules/no-object-constructor"}}]}}]}]