# ==========================================
# Music DJ Feature - Environment Configuration
# ==========================================
# Copy this file to .env and configure your settings
# DO NOT commit .env files to version control

# ==========================================
# Database Configuration
# ==========================================
# PostgreSQL database settings for storing track metadata and user data

# Database server hostname (use 'localhost' for local development)
DATABASE_HOST=localhost

# Database server port (PostgreSQL default is 5432)
DATABASE_PORT=5432

# Database username (create a dedicated user for the application)
DATABASE_USER=your_username

# Database password (use a strong password)
DATABASE_PASSWORD=your_password

# Database name (will be created if it doesn't exist)
DATABASE_NAME=music_dj_db

# Complete database connection string (alternative to individual settings above)
# Format: postgresql://username:password@hostname:port/database_name
DATABASE_URL=postgresql://username:password@localhost:5432/music_dj_db

# ==========================================
# Application Configuration
# ==========================================

# Environment mode: 'development' for dev, 'production' for production
NODE_ENV=development

# Server port (default: 5000, change if port is already in use)
PORT=5000

# Directory for uploaded audio files (relative to project root)
# Ensure this directory exists and is writable
UPLOADS_DIR=./uploads

# Directory for processed/extended audio files (relative to project root)
# Ensure this directory exists and is writable
RESULTS_DIR=./results

# Maximum file size for uploads in megabytes (default: 15MB)
# Larger files take longer to process but allow for higher quality audio
MAX_FILE_SIZE_MB=15

# ==========================================
# Streaming Upload Configuration (Optional)
# ==========================================
# Advanced streaming upload for large audio files (up to 500MB)

# Enable streaming uploads for large files (true/false)
ENABLE_STREAMING_UPLOADS=true

# Maximum file size for streaming uploads in megabytes (default: 500MB)
# This allows much larger files than standard uploads
STREAMING_MAX_FILE_SIZE_MB=500

# Chunk size for streaming processing in KB (default: 1024KB = 1MB)
# Smaller chunks use less memory but may be slower
STREAMING_CHUNK_SIZE_KB=1024

# Temporary directory for streaming uploads (relative to project root)
STREAMING_TEMP_DIR=./uploads/temp

# Cleanup interval for abandoned uploads in seconds (default: 3600 = 1 hour)
STREAMING_CLEANUP_INTERVAL=3600

# ==========================================
# Python Configuration
# ==========================================
# Python environment for audio processing algorithms

# Path to Python executable (use 'python' for system Python, or full path to specific version)
# For virtual environments: ./venv/bin/python (Linux/Mac) or ./venv/Scripts/python.exe (Windows)
PYTHON_PATH=python

# ==========================================
# Development Only (Optional)
# ==========================================
# These variables are automatically set in certain development environments

# Replit environment identifier (auto-set, do not modify)
# REPL_ID=your_repl_id

# ==========================================
# Production Considerations
# ==========================================
# For production deployments, consider:
#
# Database:
# - Use a managed PostgreSQL service (AWS RDS, Google Cloud SQL, etc.)
# - Enable SSL connections
# - Use connection pooling
#
# File Storage:
# - Use cloud storage (AWS S3, Google Cloud Storage, etc.)
# - Implement CDN for faster file serving
#
# Security:
# - Use strong, randomly generated passwords
# - Rotate credentials regularly
# - Implement proper backup strategies
#
# Performance:
# - Increase MAX_FILE_SIZE_MB for production if needed
# - Configure appropriate server resources
# - Monitor disk space usage
# ==========================================